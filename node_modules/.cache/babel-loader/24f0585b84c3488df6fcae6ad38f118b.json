{"ast":null,"code":"import { c as LocalizationContext, b as _slicedToArray } from './LocalizationContext-dfe8b78b.js';\nimport React__default, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Sendbird from './SendbirdProvider.js';\nimport ChannelList from './ChannelList.js';\nimport Conversation from './Channel.js';\nimport ChannelSettings from './ChannelSettings.js';\nimport MessageSearch from './MessageSearch.js';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, e as Loader } from './index-fe1a6d27.js';\nimport { I as IconButton } from './index-cb0d7936.js';\nimport 'sendbird';\nimport './actionTypes-3af77038.js';\nimport 'css-vars-ponyfill';\nimport './index-db1485c0.js';\nimport './utils-7b22e0fc.js';\nimport './LeaveChannel-42fd86b9.js';\nimport './index-1fe82074.js';\nimport './index-d3cbd48c.js';\nimport './index-0cc16758.js';\nimport './index-8312f99e.js';\nimport 'react-dom';\nimport './index-d85ca28f.js';\nvar COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props) {\n  var channelUrl = props.channelUrl,\n      onResultClick = props.onResultClick,\n      onCloseClick = props.onCloseClick;\n\n  var _a = useState(''),\n      searchString = _a[0],\n      setSearchString = _a[1];\n\n  var _b = useState(''),\n      inputString = _b[0],\n      setInputString = _b[1];\n\n  var _c = useState(false),\n      loading = _c[0],\n      setLoading = _c[1];\n\n  var stringSet = useContext(LocalizationContext).stringSet;\n  var timeout = null;\n  useEffect(function () {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  var handleOnChangeInputString = function handleOnChangeInputString(e) {\n    setInputString(e.target.value);\n  };\n\n  var handleOnResultLoaded = function handleOnResultLoaded() {\n    setLoading(false);\n  };\n\n  var handleOnClickResetStringButton = function handleOnClickResetStringButton(e) {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: COMPONENT_CLASS_NAME + \"__header__title\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.SEARCH_IN_CHANNEL), /*#__PURE__*/React__default.createElement(IconButton, {\n    className: COMPONENT_CLASS_NAME + \"__header__close-button\",\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCloseClick\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    width: \"22px\",\n    height: \"22px\"\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__search-icon\",\n    type: IconTypes.SEARCH,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"24px\",\n    height: \"24px\"\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    className: COMPONENT_CLASS_NAME + \"__input__container__input-area\",\n    placeholder: stringSet.SEARCH,\n    value: inputString,\n    onChange: handleOnChangeInputString\n  }), inputString && loading && /*#__PURE__*/React__default.createElement(Loader, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__spinner\",\n    width: \"20px\",\n    height: \"20px\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SPINNER,\n    fillColor: IconColors.PRIMARY,\n    width: \"20px\",\n    height: \"20px\"\n  })), !loading && inputString && /*#__PURE__*/React__default.createElement(Icon, {\n    className: COMPONENT_CLASS_NAME + \"__input__container__reset-input-button\",\n    type: IconTypes.REMOVE,\n    fillColor: IconColors.ON_BACKGROUND_3,\n    width: \"20px\",\n    height: \"20px\",\n    onClick: handleOnClickResetStringButton\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: COMPONENT_CLASS_NAME + \"__message-search\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearch, {\n    channelUrl: channelUrl,\n    searchString: searchString,\n    onResultClick: onResultClick,\n    onResultLoaded: handleOnResultLoaded\n  })));\n}\n\nfunction App(props) {\n  var appId = props.appId,\n      userId = props.userId,\n      accessToken = props.accessToken,\n      theme = props.theme,\n      userListQuery = props.userListQuery,\n      nickname = props.nickname,\n      profileUrl = props.profileUrl,\n      _props$config = props.config,\n      config = _props$config === void 0 ? {} : _props$config,\n      useReaction = props.useReaction,\n      replyType = props.replyType,\n      useMessageGrouping = props.useMessageGrouping,\n      colorSet = props.colorSet,\n      stringSet = props.stringSet,\n      allowProfileEdit = props.allowProfileEdit,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      showSearchIcon = props.showSearchIcon,\n      onProfileEditSuccess = props.onProfileEditSuccess,\n      imageCompression = props.imageCompression;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentChannelUrl = _useState2[0],\n      setCurrentChannelUrl = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showSettings = _useState4[0],\n      setShowSettings = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSearch = _useState6[0],\n      setShowSearch = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      highlightedMessage = _useState8[0],\n      setHighlightedMessage = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      startingPoint = _useState10[0],\n      setStartingPoint = _useState10[1];\n\n  return /*#__PURE__*/React__default.createElement(Sendbird, {\n    stringSet: stringSet,\n    appId: appId,\n    userId: userId,\n    accessToken: accessToken,\n    theme: theme,\n    nickname: nickname,\n    profileUrl: profileUrl,\n    userListQuery: userListQuery,\n    config: config,\n    colorSet: colorSet,\n    disableUserProfile: disableUserProfile,\n    renderUserProfile: renderUserProfile,\n    imageCompression: imageCompression,\n    useReaction: useReaction\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__wrap\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__channellist-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelList, {\n    allowProfileEdit: allowProfileEdit,\n    onProfileEditSuccess: onProfileEditSuccess,\n    onChannelSelect: function onChannelSelect(channel) {\n      setStartingPoint(null);\n      setHighlightedMessage(null);\n\n      if (channel && channel.url) {\n        setCurrentChannelUrl(channel.url);\n      } else {\n        setCurrentChannelUrl('');\n      }\n    }\n  })), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"\\n            \".concat(showSettings ? 'sendbird-app__conversation--settings-open' : '', \"\\n            \").concat(showSearch ? 'sendbird-app__conversation--search-open' : '', \"\\n            sendbird-app__conversation-wrap\\n          \")\n  }, /*#__PURE__*/React__default.createElement(Conversation, {\n    channelUrl: currentChannelUrl,\n    onChatHeaderActionClick: function onChatHeaderActionClick() {\n      setShowSearch(false);\n      setShowSettings(!showSettings);\n    },\n    onSearchClick: function onSearchClick() {\n      setShowSettings(false);\n      setShowSearch(!showSearch);\n    },\n    showSearchIcon: showSearchIcon,\n    startingPoint: startingPoint,\n    highlightedMessage: highlightedMessage,\n    useReaction: useReaction,\n    replyType: replyType,\n    useMessageGrouping: useMessageGrouping\n  })), showSettings && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__settingspanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(ChannelSettings, {\n    className: \"sendbird-channel-settings\",\n    channelUrl: currentChannelUrl,\n    onCloseClick: function onCloseClick() {\n      setShowSettings(false);\n    }\n  })), showSearch && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-app__searchpanel-wrap\"\n  }, /*#__PURE__*/React__default.createElement(MessageSearchPannel, {\n    channelUrl: currentChannelUrl,\n    onResultClick: function onResultClick(message) {\n      if (message.messageId === highlightedMessage) {\n        setHighlightedMessage(null);\n        setTimeout(function () {\n          setHighlightedMessage(message.messageId);\n        });\n      } else {\n        setStartingPoint(message.createdAt);\n        setHighlightedMessage(message.messageId);\n      }\n    },\n    onCloseClick: function onCloseClick() {\n      setShowSearch(false);\n    }\n  }))));\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n  }),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })\n};\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {}\n};\nexport { App as default };","map":{"version":3,"sources":["../src/smart-components/MessageSearch/messageSearchPannel.tsx","../src/smart-components/App/index.jsx"],"names":["COMPONENT_CLASS_NAME","onResultClick","onCloseClick","props","searchString","setSearchString","useState","inputString","setInputString","loading","setLoading","useContext","timeout","useEffect","clearTimeout","setTimeout","handleOnChangeInputString","e","handleOnResultLoaded","handleOnClickResetStringButton","LabelTypography","LabelColors","ONBACKGROUND_1","stringSet","IconTypes","IconColors","appId","userId","accessToken","theme","userListQuery","nickname","profileUrl","config","useReaction","replyType","useMessageGrouping","colorSet","allowProfileEdit","disableUserProfile","renderUserProfile","showSearchIcon","onProfileEditSuccess","imageCompression","currentChannelUrl","setCurrentChannelUrl","showSettings","setShowSettings","showSearch","setShowSearch","highlightedMessage","setHighlightedMessage","startingPoint","setStartingPoint","channel","message","App","PropTypes","logLevel","compressionRate","resizingWidth","resizingHeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport './messageSearchPannel.scss';\n\nimport MessageSearch from './index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Icon, { IconTypes, IconColors } from '../../ui/Icon';\nimport IconButton from '../../ui/IconButton';\nimport Label, { LabelTypography, LabelColors } from '../../ui/Label';\nimport Loader from '../../ui/Loader';\n\ninterface Props {\n  channelUrl: string;\n  onResultClick?: (message) => void;\n  onCloseClick?: () => void;\n}\n\nconst COMPONENT_CLASS_NAME = 'sendbird-message-search-pannel';\n\nfunction MessageSearchPannel(props: Props): JSX.Element {\n  const {\n    channelUrl,\n    onResultClick,\n    onCloseClick,\n  } = props;\n\n  const [searchString, setSearchString] = useState('');\n  const [inputString, setInputString] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { stringSet } = useContext(LocalizationContext);\n\n  let timeout = null;\n  useEffect(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    timeout = setTimeout(() => {\n      setSearchString(inputString);\n      setLoading(true);\n      timeout = null;\n    }, 500);\n  }, [inputString]);\n\n  const handleOnChangeInputString = (e) => {\n    setInputString(e.target.value);\n  };\n\n  const handleOnResultLoaded = () => {\n    setLoading(false);\n  };\n\n  const handleOnClickResetStringButton = (e) => {\n    e.stopPropagation();\n    setInputString('');\n    setSearchString('');\n  };\n\n  return (\n    <div className={COMPONENT_CLASS_NAME}>\n      <div className={`${COMPONENT_CLASS_NAME}__header`}>\n        <Label\n          className={`${COMPONENT_CLASS_NAME}__header__title`}\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {stringSet.SEARCH_IN_CHANNEL}\n        </Label>\n        <IconButton\n          className={`${COMPONENT_CLASS_NAME}__header__close-button`}\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onCloseClick}\n        >\n          <Icon\n            type={IconTypes.CLOSE}\n            fillColor={IconColors.ON_BACKGROUND_1}\n            width=\"22px\"\n            height=\"22px\"\n          />\n        </IconButton>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__input`}>\n        <div className={`${COMPONENT_CLASS_NAME}__input__container`}>\n            <Icon\n              className={`${COMPONENT_CLASS_NAME}__input__container__search-icon`}\n              type={IconTypes.SEARCH}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"24px\"\n              height=\"24px\"\n            />\n            <input\n              className={`${COMPONENT_CLASS_NAME}__input__container__input-area`}\n              placeholder={stringSet.SEARCH}\n              value={inputString}\n              onChange={handleOnChangeInputString}\n            />\n            {\n              inputString && loading && (\n                <Loader\n                  className={`${COMPONENT_CLASS_NAME}__input__container__spinner`}\n                  width=\"20px\"\n                  height=\"20px\"\n                >\n                  <Icon\n                    type={IconTypes.SPINNER}\n                    fillColor={IconColors.PRIMARY}\n                    width=\"20px\"\n                    height=\"20px\"\n                  />\n                </Loader>\n              )\n            }\n            {\n              !loading && inputString && (\n                <Icon\n                  className={`${COMPONENT_CLASS_NAME}__input__container__reset-input-button`}\n                  type={IconTypes.REMOVE}\n                  fillColor={IconColors.ON_BACKGROUND_3}\n                  width=\"20px\"\n                  height=\"20px\"\n                  onClick={handleOnClickResetStringButton}\n                />\n              )\n            }\n        </div>\n      </div>\n      <div className={`${COMPONENT_CLASS_NAME}__message-search`}>\n        <MessageSearch\n          channelUrl={channelUrl}\n          searchString={searchString}\n          onResultClick={onResultClick}\n          onResultLoaded={handleOnResultLoaded}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MessageSearchPannel;\n","/**\n * This is a drop in Chat solution\n * Can also be used as an example for creating\n * default chat apps\n */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Sendbird from '../../lib/Sendbird';\n\nimport ChannelList from '../ChannelList';\nimport Conversation from '../Conversation';\nimport ChannelSettings from '../ChannelSettings';\nimport MessageSearchPannel from '../MessageSearch/messageSearchPannel';\n\nimport './index.scss';\n\nexport default function App(props) {\n  const {\n    appId,\n    userId,\n    accessToken,\n    theme,\n    userListQuery,\n    nickname,\n    profileUrl,\n    config = {},\n    useReaction,\n    replyType,\n    useMessageGrouping,\n    colorSet,\n    stringSet,\n    allowProfileEdit,\n    disableUserProfile,\n    renderUserProfile,\n    showSearchIcon,\n    onProfileEditSuccess,\n    imageCompression,\n  } = props;\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n  const [highlightedMessage, setHighlightedMessage] = useState(null);\n  const [startingPoint, setStartingPoint] = useState(null);\n\n  return (\n    <Sendbird\n      stringSet={stringSet}\n      appId={appId}\n      userId={userId}\n      accessToken={accessToken}\n      theme={theme}\n      nickname={nickname}\n      profileUrl={profileUrl}\n      userListQuery={userListQuery}\n      config={config}\n      colorSet={colorSet}\n      disableUserProfile={disableUserProfile}\n      renderUserProfile={renderUserProfile}\n      imageCompression={imageCompression}\n      useReaction={useReaction}\n    >\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <ChannelList\n            allowProfileEdit={allowProfileEdit}\n            onProfileEditSuccess={onProfileEditSuccess}\n            onChannelSelect={(channel) => {\n              setStartingPoint(null);\n              setHighlightedMessage(null);\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              } else {\n                setCurrentChannelUrl('');\n              }\n            }}\n          />\n        </div>\n        <div\n          className={`\n            ${showSettings ? 'sendbird-app__conversation--settings-open' : ''}\n            ${showSearch ? 'sendbird-app__conversation--search-open' : ''}\n            sendbird-app__conversation-wrap\n          `}\n        >\n          <Conversation\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSearch(false);\n              setShowSettings(!showSettings);\n            }}\n            onSearchClick={() => {\n              setShowSettings(false);\n              setShowSearch(!showSearch);\n            }}\n            showSearchIcon={showSearchIcon}\n            startingPoint={startingPoint}\n            highlightedMessage={highlightedMessage}\n            useReaction={useReaction}\n            replyType={replyType}\n            useMessageGrouping={useMessageGrouping}\n          />\n        </div>\n        {showSettings && (\n          <div className=\"sendbird-app__settingspanel-wrap\">\n            <ChannelSettings\n              className=\"sendbird-channel-settings\"\n              channelUrl={currentChannelUrl}\n              onCloseClick={() => {\n                setShowSettings(false);\n              }}\n            />\n          </div>\n        )}\n        {showSearch && (\n          <div className=\"sendbird-app__searchpanel-wrap\">\n            <MessageSearchPannel\n              channelUrl={currentChannelUrl}\n              onResultClick={(message) => {\n                if (message.messageId === highlightedMessage) {\n                  setHighlightedMessage(null);\n                  setTimeout(() => {\n                    setHighlightedMessage(message.messageId);\n                  });\n                } else {\n                  setStartingPoint(message.createdAt);\n                  setHighlightedMessage(message.messageId);\n                }\n              }}\n              onCloseClick={() => {\n                setShowSearch(false);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </Sendbird>\n  );\n}\n\nApp.propTypes = {\n  appId: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  theme: PropTypes.string,\n  userListQuery: PropTypes.func,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  allowProfileEdit: PropTypes.bool,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  onProfileEditSuccess: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  }),\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showSearchIcon: PropTypes.bool,\n  useMessageGrouping: PropTypes.bool,\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    resizingHeight: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n  }),\n};\n\nApp.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  userListQuery: null,\n  allowProfileEdit: false,\n  onProfileEditSuccess: null,\n  disableUserProfile: false,\n  showSearchIcon: false,\n  renderUserProfile: null,\n  config: {},\n  useReaction: true,\n  replyType: 'NONE',\n  useMessageGrouping: true,\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n};\n"]},"metadata":{},"sourceType":"module"}