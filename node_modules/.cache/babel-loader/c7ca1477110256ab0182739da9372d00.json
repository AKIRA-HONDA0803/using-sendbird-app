{"ast":null,"code":"import { b as _slicedToArray, c as LocalizationContext, e as _toConsumableArray } from './LocalizationContext-dfe8b78b.js';\nimport React__default, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-fe1a6d27.js';\nimport { U as UserProfileContext, C as ContextMenu, b as MenuItems, f as ConnectedUserProfile } from './index-cb0d7936.js';\n\nvar InputLabel = function InputLabel(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input-label\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_1\n  }, children);\n};\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired\n}; // future: add validations? onChange? more props etc etc\n\nvar Input = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var name = props.name,\n      required = props.required,\n      disabled = props.disabled,\n      placeHolder = props.placeHolder,\n      value = props.value;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-input\"\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    className: \"sendbird-input__input\",\n    ref: ref,\n    name: name,\n    required: required,\n    disabled: disabled,\n    value: inputValue,\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n    }\n  }), placeHolder && !inputValue && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-input__placeholder\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_3\n  }, placeHolder));\n});\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string\n};\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: ''\n};\n\nvar noop = function noop() {};\n\nfunction MutedAvatarOverlay(props) {\n  var _a = props.height,\n      height = _a === void 0 ? 24 : _a,\n      _b = props.width,\n      width = _b === void 0 ? 24 : _b;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__icon\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-muted-avatar__bg\",\n    style: {\n      height: height + \"px\",\n      width: width + \"px\"\n    }\n  }), /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.MUTE,\n    fillColor: IconColors.WHITE,\n    width: height - 8 + \"px\",\n    height: width - 8 + \"px\"\n  })));\n}\n\nfunction Checkbox(_ref) {\n  var id = _ref.id,\n      checked = _ref.checked,\n      onChange = _ref.onChange;\n\n  var _useState = useState(checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setCheck = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"label\", {\n    className: \"sendbird-checkbox\",\n    htmlFor: id\n  }, /*#__PURE__*/React__default.createElement(\"input\", {\n    id: id,\n    type: \"checkbox\",\n    checked: isChecked,\n    onClick: function onClick() {\n      return setCheck(!isChecked);\n    },\n    onChange: onChange\n  }), /*#__PURE__*/React__default.createElement(\"span\", {\n    className: \"sendbird-checkbox--checkmark\"\n  }));\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: function onChange() {}\n};\n\nfunction UserListItem(_ref) {\n  var className = _ref.className,\n      user = _ref.user,\n      checkBox = _ref.checkBox,\n      disableMessaging = _ref.disableMessaging,\n      currentUser = _ref.currentUser,\n      checked = _ref.checked,\n      _onChange = _ref.onChange,\n      action = _ref.action;\n  var uniqueKey = user.userId;\n  var actionRef = React__default.useRef(null);\n  var parentRef = React__default.useRef(null);\n  var avatarRef = React__default.useRef(null);\n\n  var _useContext = useContext(UserProfileContext),\n      disableUserProfile = _useContext.disableUserProfile,\n      renderUserProfile = _useContext.renderUserProfile;\n\n  var _useContext2 = useContext(LocalizationContext),\n      stringSet = _useContext2.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-user-list-item']).join(' '),\n    ref: parentRef\n  }, user.isMuted && /*#__PURE__*/React__default.createElement(MutedAvatarOverlay, {\n    height: 40,\n    width: 40\n  }), /*#__PURE__*/React__default.createElement(ContextMenu, {\n    menuTrigger: function menuTrigger(toggleDropdown) {\n      return /*#__PURE__*/React__default.createElement(Avatar, {\n        className: \"sendbird-user-list-item__avatar\",\n        ref: avatarRef,\n        src: user.profileUrl,\n        width: \"40px\",\n        height: \"40px\",\n        onClick: function onClick() {\n          if (!disableUserProfile) {\n            toggleDropdown();\n          }\n        }\n      });\n    },\n    menuItems: function menuItems(closeDropdown) {\n      return /*#__PURE__*/React__default.createElement(MenuItems, {\n        openLeft: true,\n        parentRef: avatarRef // for catching location(x, y) of MenuItems\n        ,\n        parentContainRef: avatarRef // for toggling more options(menus & reactions)\n        ,\n        closeDropdown: closeDropdown,\n        style: {\n          paddingTop: 0,\n          paddingBottom: 0\n        }\n      }, renderUserProfile ? renderUserProfile({\n        user: user,\n        currentUserId: currentUser,\n        close: closeDropdown\n      }) : /*#__PURE__*/React__default.createElement(ConnectedUserProfile, {\n        disableMessaging: disableMessaging,\n        user: user,\n        currentUserId: currentUser,\n        onSuccess: closeDropdown\n      }));\n    }\n  }), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__title\",\n    type: LabelTypography.SUBTITLE_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME, currentUser === user.userId && ' (You)'), // if there is now nickname, display userId\n  !user.nickname && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__subtitle\",\n    type: LabelTypography.CAPTION_3,\n    color: LabelColors.ONBACKGROUND_2\n  }, user.userId), checkBox &&\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/label-has-associated-control\n  React__default.createElement(\"label\", {\n    className: \"sendbird-user-list-item__checkbox\",\n    htmlFor: uniqueKey\n  }, /*#__PURE__*/React__default.createElement(Checkbox, {\n    id: uniqueKey,\n    checked: checked,\n    onChange: function onChange(event) {\n      return _onChange(event);\n    }\n  })), user.role === 'operator' && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-user-list-item__operator\",\n    type: LabelTypography.SUBTITLE_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Operator\"), action && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-user-list-item__action\",\n    ref: actionRef\n  }, action({\n    actionRef: actionRef,\n    parentRef: parentRef\n  })));\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: function onChange() {}\n};\nexport { InputLabel as I, MutedAvatarOverlay as M, UserListItem as U, Input as a, noop as n };","map":{"version":3,"sources":["../src/ui/Input/index.jsx","../src/utils/utils.js","../src/ui/Avatar/MutedAvatarOverlay.tsx","../src/ui/Checkbox/index.jsx","../src/ui/UserListItem/index.jsx"],"names":["InputLabel","children","LabelTypography","LabelColors","ONBACKGROUND_1","PropTypes","isRequired","Input","name","required","disabled","placeHolder","value","props","inputValue","setInputValue","useState","e","ONBACKGROUND_3","string","noop","MutedAvatarOverlay","_b","height","width","IconTypes","IconColors","id","checked","onChange","isChecked","setCheck","Checkbox","func","className","user","checkBox","disableMessaging","currentUser","action","uniqueKey","actionRef","React","parentRef","avatarRef","disableUserProfile","renderUserProfile","useContext","stringSet","Array","toggleDropdown","paddingTop","paddingBottom","currentUserId","close","closeDropdown","ONBACKGROUND_2","UserListItem","userId","role","isMuted","nickname","profileUrl"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport './index.scss';\n\nexport const InputLabel = ({ children }) => (\n  <Label\n    className=\"sendbird-input-label\"\n    type={LabelTypography.CAPTION_3}\n    color={LabelColors.ONBACKGROUND_1}\n  >\n    {children}\n  </Label>\n);\n\nInputLabel.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\n// future: add validations? onChange? more props etc etc\nconst Input = React.forwardRef((props, ref) => {\n  const {\n    name,\n    required,\n    disabled,\n    placeHolder,\n    value,\n  } = props;\n  const [inputValue, setInputValue] = useState(value);\n  return (\n    <div className=\"sendbird-input\">\n      <input\n        className=\"sendbird-input__input\"\n        ref={ref}\n        name={name}\n        required={required}\n        disabled={disabled}\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value);\n        }}\n      />\n      {(placeHolder && !inputValue) && (\n        <Label\n          className=\"sendbird-input__placeholder\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {placeHolder}\n        </Label>\n      )}\n    </div>\n  );\n});\n\nInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeHolder: PropTypes.string,\n  value: PropTypes.string,\n};\n\nInput.defaultProps = {\n  required: false,\n  disabled: false,\n  placeHolder: '',\n  value: '',\n};\n\nexport default Input;\n","import format from 'date-fns/format';\n\nexport const noop = () => {};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const getSenderName = (message) => (\n  message.sender && (\n    message.sender.friendName\n    || message.sender.nickname\n    || message.sender.userId\n  )\n);\n\nexport const getSenderProfileUrl = (message) => message.sender && message.sender.profileUrl;\n\nexport default {\n  getMessageCreatedAt,\n  getSenderName,\n  getSenderProfileUrl,\n};\n","import './muted-avatar-overlay.scss';\n\nimport React, { ReactElement } from 'react'\nimport Icon, { IconTypes, IconColors } from '../Icon';\n\ninterface Props {\n  height?: number;\n  width?: number;\n}\n\nexport default function MutedAvatarOverlay(props: Props): ReactElement {\n  const { height = 24, width = 24 } = props;\n  return (\n    <div\n      className=\"sendbird-muted-avatar\"\n      style={{\n        height: `${height}px`,\n        width: `${width}px`,\n      }}\n    >\n      <div className=\"sendbird-muted-avatar__icon\">\n        <div\n          className=\"sendbird-muted-avatar__bg\"\n          style={{\n            height: `${height}px`,\n            width: `${width}px`,\n          }}\n        />\n        <Icon\n          type={IconTypes.MUTE}\n          fillColor={IconColors.WHITE}\n          width={`${height - 8}px`}\n          height={`${width - 8}px`}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nexport default function Checkbox({\n  id,\n  checked,\n  onChange,\n}) {\n  const [isChecked, setCheck] = useState(checked);\n  return (\n    <label className=\"sendbird-checkbox\" htmlFor={id}>\n      <input\n        id={id}\n        type=\"checkbox\"\n        checked={isChecked}\n        onClick={() => setCheck(!isChecked)}\n        onChange={onChange}\n      />\n      <span className=\"sendbird-checkbox--checkmark\" />\n    </label>\n  );\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nCheckbox.defaultProps = {\n  id: 'sendbird-checkbox-input',\n  checked: false,\n  onChange: () => { },\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Avatar from '../Avatar/index';\nimport MutedAvatarOverlay from '../Avatar/MutedAvatarOverlay';\nimport Checkbox from '../Checkbox';\nimport UserProfile from '../UserProfile';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nexport default function UserListItem({\n  className,\n  user,\n  checkBox,\n  disableMessaging,\n  currentUser,\n  checked,\n  onChange,\n  action,\n}) {\n  const uniqueKey = user.userId;\n  const actionRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  const avatarRef = React.useRef(null);\n  const {\n    disableUserProfile,\n    renderUserProfile,\n  } = useContext(UserProfileContext);\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-user-list-item',\n      ].join(' ')}\n      ref={parentRef}\n    >\n      {\n        user.isMuted && (\n          <MutedAvatarOverlay height={40} width={40} />\n        )\n      }\n      <ContextMenu\n        menuTrigger={(toggleDropdown) => (\n          <Avatar\n            className=\"sendbird-user-list-item__avatar\"\n            ref={avatarRef}\n            src={user.profileUrl}\n            width=\"40px\"\n            height=\"40px\"\n            onClick={() => {\n              if (!disableUserProfile) {\n                toggleDropdown();\n              }\n            }}\n          />\n        )}\n        menuItems={(closeDropdown) => (\n          <MenuItems\n            openLeft\n            parentRef={avatarRef}\n            // for catching location(x, y) of MenuItems\n            parentContainRef={avatarRef}\n            // for toggling more options(menus & reactions)\n            closeDropdown={closeDropdown}\n            style={{ paddingTop: 0, paddingBottom: 0 }}\n          >\n            {\n              renderUserProfile\n                ? renderUserProfile({\n                  user,\n                  currentUserId: currentUser,\n                  close: closeDropdown,\n                })\n                : (\n                  <UserProfile\n                    disableMessaging={disableMessaging}\n                    user={user}\n                    currentUserId={currentUser}\n                    onSuccess={closeDropdown}\n                  />\n                )\n            }\n          </MenuItems>\n        )}\n      />\n      <Label\n        className=\"sendbird-user-list-item__title\"\n        type={LabelTypography.SUBTITLE_1}\n        color={LabelColors.ONBACKGROUND_1}\n      >\n        {user.nickname || stringSet.NO_NAME}\n        {\n          (currentUser === user.userId) && (\n            ' (You)'\n          )\n        }\n      </Label>\n      { // if there is now nickname, display userId\n        !user.nickname && (\n          <Label\n            className=\"sendbird-user-list-item__subtitle\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {user.userId}\n          </Label>\n        )\n      }\n      {\n        checkBox && (\n          // eslint-disable-next-line jsx-a11y/label-has-associated-control\n          <label\n            className=\"sendbird-user-list-item__checkbox\"\n            htmlFor={uniqueKey}\n          >\n            <Checkbox\n              id={uniqueKey}\n              checked={checked}\n              onChange={(event) => onChange(event)}\n            />\n          </label>\n        )\n      }\n      {\n        user.role === 'operator' && (\n          <Label\n            className=\"sendbird-user-list-item__operator\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            Operator\n          </Label>\n        )\n      }\n      {\n        action && (\n          <div\n            className=\"sendbird-user-list-item__action\"\n            ref={actionRef}\n          >\n            { action({ actionRef, parentRef })}\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nUserListItem.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  user: PropTypes.shape({\n    userId: PropTypes.string,\n    role: PropTypes.string,\n    isMuted: PropTypes.bool,\n    nickname: PropTypes.string,\n    profileUrl: PropTypes.string,\n  }).isRequired,\n  disableMessaging: PropTypes.bool,\n  currentUser: PropTypes.string,\n  action: PropTypes.element,\n  checkBox: PropTypes.bool,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func,\n};\n\nUserListItem.defaultProps = {\n  className: '',\n  currentUser: '',\n  checkBox: false,\n  disableMessaging: false,\n  checked: false,\n  action: null,\n  onChange: () => { },\n};\n"]},"metadata":{},"sourceType":"module"}