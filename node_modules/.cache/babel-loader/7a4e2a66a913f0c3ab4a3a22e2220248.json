{"ast":null,"code":"import React__default, { useState, useContext, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { _ as __assign, d as __spreadArray, b as _slicedToArray, e as _toConsumableArray, a as _objectSpread2, c as LocalizationContext, w as withSendbirdContext, h as _inherits, i as _createSuper, k as _classCallCheck, f as _defineProperty, l as _assertThisInitialized, j as _createClass } from './LocalizationContext-dfe8b78b.js';\nimport { g as format, L as Label, a as LabelTypography, b as LabelColors, I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-fe1a6d27.js';\n/**\n * user profile goes deep inside the component tree\n * use this context as a short circuit to send in values\n */\n\nvar UserProfileContext = /*#__PURE__*/React__default.createContext({\n  disableUserProfile: true,\n  isOpenChannel: false,\n  renderUserProfile: null\n});\n\nvar UserProfileProvider = function UserProfileProvider(props) {\n  var children = props.children,\n      className = props.className;\n  return /*#__PURE__*/React__default.createElement(UserProfileContext.Provider, {\n    value: props\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: className\n  }, children));\n};\n\nUserProfileProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.any]).isRequired,\n  // eslint-disable-next-line react/no-unused-prop-types\n  isOpenChannel: PropTypes.bool,\n  // eslint-disable-next-line react/no-unused-prop-types\n  disableUserProfile: PropTypes.bool,\n  // eslint-disable-next-line react/no-unused-prop-types\n  renderUserProfile: PropTypes.func,\n  className: PropTypes.string\n};\nUserProfileProvider.defaultProps = {\n  className: null,\n  isOpenChannel: false,\n  disableUserProfile: false,\n  renderUserProfile: null\n};\nvar SUPPORTED_MIMES = {\n  IMAGE: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/svg+xml', 'image/webp' // not supported in IE\n  ],\n  VIDEO: ['video/mpeg', 'video/ogg', 'video/webm', 'video/mp4'],\n  AUDIO: ['audio/aac', 'audio/midi', 'audio/x-midi', 'audio/mpeg', 'audio/ogg', 'audio/opus', 'audio/wav', 'audio/webm', 'audio/3gpp', 'audio/3gpp2', 'audio/mp3']\n};\nvar UIKitMessageTypes = {\n  ADMIN: \"ADMIN\",\n  TEXT: \"TEXT\",\n  FILE: \"FILE\",\n  THUMBNAIL: \"THUMBNAIL\",\n  OG: \"OG\",\n  UNKNOWN: \"UNKNOWN\"\n};\nvar UIKitFileTypes = {\n  IMAGE: \"IMAGE\",\n  AUDIO: \"AUDIO\",\n  VIDEO: \"VIDEO\",\n  GIF: \"GIF\",\n  OTHERS: \"OTHERS\"\n};\nvar SendingMessageStatus = {\n  NONE: 'none',\n  SUCCEEDED: 'succeeded',\n  FAILED: 'failed',\n  PENDING: 'pending'\n};\nvar OutgoingMessageStates = {\n  NONE: 'NONE',\n  PENDING: 'PENDING',\n  SENT: 'SENT',\n  FAILED: 'FAILED',\n  DELIVERED: 'DELIVERED',\n  READ: 'READ'\n};\n\nvar isImage = function isImage(type) {\n  return SUPPORTED_MIMES.IMAGE.indexOf(type) >= 0;\n};\n\nvar isVideo = function isVideo(type) {\n  return SUPPORTED_MIMES.VIDEO.indexOf(type) >= 0;\n};\n\nvar isGif = function isGif(type) {\n  return type === 'image/gif';\n};\n\nvar isSupportedFileView = function isSupportedFileView(type) {\n  return isImage(type) || isVideo(type);\n};\n\nvar isAudio = function isAudio(type) {\n  return SUPPORTED_MIMES.AUDIO.indexOf(type) >= 0;\n};\n\nvar getUIKitFileTypes = function getUIKitFileTypes() {\n  return __assign({}, UIKitFileTypes);\n};\n\nvar getUIKitFileType = function getUIKitFileType(type) {\n  if (isGif(type)) return UIKitFileTypes.GIF;\n  if (isImage(type)) return UIKitFileTypes.IMAGE;\n  if (isVideo(type)) return UIKitFileTypes.VIDEO;\n  if (isAudio(type)) return UIKitFileTypes.AUDIO;\n  return UIKitFileTypes.OTHERS;\n};\n\nvar getOutgoingMessageStates = function getOutgoingMessageStates() {\n  return __assign({}, OutgoingMessageStates);\n};\n\nvar getOutgoingMessageState = function getOutgoingMessageState(channel, message) {\n  var _a;\n\n  if (message.sendingStatus === 'pending') return OutgoingMessageStates.PENDING;\n  if (message.sendingStatus === 'failed') return OutgoingMessageStates.FAILED;\n\n  if ((_a = channel === null || channel === void 0 ? void 0 : channel.isGroupChannel) === null || _a === void 0 ? void 0 : _a.call(channel)) {\n    /* GroupChannel only */\n    if (channel.getUnreadMemberCount(message) === 0) {\n      return OutgoingMessageStates.READ;\n    } else if (channel.getUndeliveredMemberCount(message) === 0) {\n      return OutgoingMessageStates.DELIVERED;\n    }\n  }\n\n  if (message.sendingStatus === 'succeeded') return OutgoingMessageStates.SENT;\n  return OutgoingMessageStates.NONE;\n};\n\nvar isSentMessage = function isSentMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.SENT || getOutgoingMessageState(channel, message) === OutgoingMessageStates.DELIVERED || getOutgoingMessageState(channel, message) === OutgoingMessageStates.READ;\n};\n\nvar isFailedMessage = function isFailedMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.FAILED;\n};\n\nvar isPendingMessage = function isPendingMessage(channel, message) {\n  return getOutgoingMessageState(channel, message) === OutgoingMessageStates.PENDING;\n};\n\nvar isSentStatus = function isSentStatus(state) {\n  return state === OutgoingMessageStates.SENT || state === OutgoingMessageStates.DELIVERED || state === OutgoingMessageStates.READ;\n};\n\nvar isAdminMessage = function isAdminMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isAdminMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'admin');\n};\n\nvar isUserMessage = function isUserMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isUserMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'user');\n};\n\nvar isFileMessage = function isFileMessage(message) {\n  var _a;\n\n  return message && (((_a = message.isFileMessage) === null || _a === void 0 ? void 0 : _a.call(message)) || message['messageType'] && message.messageType === 'file');\n};\n\nvar isOGMessage = function isOGMessage(message) {\n  var _a;\n\n  return !!(message && isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.ogMetaData) && ((_a = message === null || message === void 0 ? void 0 : message.ogMetaData) === null || _a === void 0 ? void 0 : _a.url));\n};\n\nvar isTextMessage = function isTextMessage(message) {\n  return isUserMessage(message) && !isOGMessage(message);\n};\n\nvar isThumbnailMessage = function isThumbnailMessage(message) {\n  return message && isFileMessage(message) && isSupportedFileView(message.type);\n};\n\nvar isImageMessage = function isImageMessage(message) {\n  return message && isThumbnailMessage(message) && isImage(message.type);\n};\n\nvar isVideoMessage = function isVideoMessage(message) {\n  return message && isThumbnailMessage(message) && isVideo(message.type);\n};\n\nvar isGifMessage = function isGifMessage(message) {\n  return message && isThumbnailMessage(message) && isGif(message.type);\n};\n\nvar isAudioMessage = function isAudioMessage(message) {\n  return message && isFileMessage(message) && isAudio(message.type);\n};\n\nvar isEditedMessage = function isEditedMessage(message) {\n  return isUserMessage(message) && (message === null || message === void 0 ? void 0 : message.updatedAt) > 0;\n};\n\nvar getUIKitMessageTypes = function getUIKitMessageTypes() {\n  return __assign({}, UIKitMessageTypes);\n};\n\nvar getUIKitMessageType = function getUIKitMessageType(message) {\n  if (isAdminMessage(message)) return UIKitMessageTypes.ADMIN;\n\n  if (isUserMessage(message)) {\n    return isOGMessage(message) ? UIKitMessageTypes.OG : UIKitMessageTypes.TEXT;\n  }\n\n  if (isFileMessage(message)) {\n    return isThumbnailMessage(message) ? UIKitMessageTypes.THUMBNAIL : UIKitMessageTypes.FILE;\n  }\n\n  return UIKitMessageTypes.UNKNOWN;\n};\n\nvar getSendingMessageStatus = function getSendingMessageStatus() {\n  return __assign({}, SendingMessageStatus);\n};\n\nvar reducer = function reducer(accumulator, currentValue) {\n  if (Array.isArray(currentValue)) {\n    return __spreadArray(__spreadArray([], accumulator, true), currentValue, true);\n  } else {\n    accumulator.push(currentValue);\n    return accumulator;\n  }\n};\n\nvar getClassName = function getClassName(classNames) {\n  return Array.isArray(classNames) ? classNames.reduce(reducer, []).join(' ') : classNames;\n};\n\nvar isReactedBy = function isReactedBy(userId, reaction) {\n  return reaction.userIds.some(function (reactorUserId) {\n    return reactorUserId === userId;\n  });\n};\n\nvar getEmojiTooltipString = function getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet) {\n  var you = '';\n\n  if (isReactedBy(userId, reaction)) {\n    you = reaction.userIds.length === 1 ? stringSet.TOOLTIP__YOU : stringSet.TOOLTIP__AND_YOU;\n  }\n\n  return \"\" + reaction.userIds.filter(function (reactorUserId) {\n    return reactorUserId !== userId;\n  }).map(function (reactorUserId) {\n    return memberNicknamesMap.get(reactorUserId) || stringSet.TOOLTIP__UNKNOWN_USER;\n  }).join(', ') + you;\n};\n\nvar URL_REG = /[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&//=]*)/;\n\nvar isUrl = function isUrl(text) {\n  return URL_REG.test(text);\n};\n\nvar truncateString = function truncateString(fullStr, strLen) {\n  if (!strLen) strLen = 40;\n  if (fullStr === null || fullStr === undefined) return '';\n  if (fullStr.length <= strLen) return fullStr;\n  var separator = '...';\n  var sepLen = separator.length;\n  var charsToShow = strLen - sepLen;\n  var frontChars = Math.ceil(charsToShow / 2);\n  var backChars = Math.floor(charsToShow / 2);\n  return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\n};\n\nvar copyToClipboard = function copyToClipboard(text) {\n  // @ts-ignore: Unreachable code error\n  if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    // @ts-ignore: Unreachable code error\n    return window.clipboardData.setData('Text', text);\n  }\n\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    var textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n\n    document.body.appendChild(textarea);\n    textarea.select();\n\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  return false;\n};\n\nvar getEmojiListAll = function getEmojiListAll(emojiContainer) {\n  var _a;\n\n  return (_a = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a === void 0 ? void 0 : _a.map(function (emojiCategory) {\n    return emojiCategory.emojis;\n  }).reduce(function (prevArr, currArr) {\n    return prevArr.concat(currArr);\n  }, []);\n};\n\nvar getEmojiMapAll = function getEmojiMapAll(emojiContainer) {\n  var _a;\n\n  var emojiMap = new Map();\n  (_a = emojiContainer === null || emojiContainer === void 0 ? void 0 : emojiContainer.emojiCategories) === null || _a === void 0 ? void 0 : _a.forEach(function (category) {\n    var _a;\n\n    (_a = category === null || category === void 0 ? void 0 : category.emojis) === null || _a === void 0 ? void 0 : _a.forEach(function (emoji) {\n      if (emoji && emoji.key) {\n        emojiMap.set(emoji.key, emoji);\n      }\n    });\n  });\n  return emojiMap;\n};\n\nvar getUserName = function getUserName(user) {\n  return (user === null || user === void 0 ? void 0 : user.friendName) || (user === null || user === void 0 ? void 0 : user.nickname) || (user === null || user === void 0 ? void 0 : user.userId);\n};\n\nvar getSenderName = function getSenderName(message) {\n  return message.sender && getUserName(message.sender);\n};\n\nvar getMessageCreatedAt = function getMessageCreatedAt(message) {\n  return format(message.createdAt || 0, 'p');\n};\n\nvar hasSameMembers = function hasSameMembers(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var sortedA = __spreadArray([], a, true).sort();\n\n  var sortedB = __spreadArray([], b, true).sort();\n\n  for (var i = 0; i < sortedA.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isFriend = function isFriend(user) {\n  return !!(user.friendDiscoveryKey || user.friendName);\n};\n\nvar filterMessageListParams = function filterMessageListParams(params, message) {\n  var _a, _b, _c;\n\n  if ((params === null || params === void 0 ? void 0 : params.messageType) && params.messageType !== message.messageType) {\n    return false;\n  }\n\n  if (((_a = params === null || params === void 0 ? void 0 : params.customTypes) === null || _a === void 0 ? void 0 : _a.length) > 0) {\n    var customTypes = params.customTypes.filter(function (item) {\n      return item !== '*';\n    }); // Because Chat SDK inserts '*' when customTypes is empty\n\n    if (customTypes.length > 0 && !customTypes.includes(message.customType)) {\n      return false;\n    }\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.senderUserIds) && ((_b = params === null || params === void 0 ? void 0 : params.senderUserIds) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n    if ((message === null || message === void 0 ? void 0 : message.isUserMessage()) || message.isFileMessage()) {\n      var messageSender = message.sender || message['_sender'];\n\n      if (!((_c = params === null || params === void 0 ? void 0 : params.senderUserIds) === null || _c === void 0 ? void 0 : _c.includes(messageSender === null || messageSender === void 0 ? void 0 : messageSender.userId))) {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  if (!(params === null || params === void 0 ? void 0 : params.includeParentMessageInfo) && ((message === null || message === void 0 ? void 0 : message.parentMessageId) || (message === null || message === void 0 ? void 0 : message.parentMessage))) {\n    return false;\n  }\n\n  return true;\n};\n\nvar filterChannelListParams = function filterChannelListParams(params, channel, currentUserId) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n\n  if (!(params === null || params === void 0 ? void 0 : params.includeEmpty) && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) && channel.lastMessage === null) {\n    return false;\n  }\n\n  if (((_a = params === null || params === void 0 ? void 0 : params._searchFilter) === null || _a === void 0 ? void 0 : _a.search_query) && ((_b = params._searchFilter.search_fields) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n    var searchFilter = params._searchFilter;\n    var searchQuery_1 = searchFilter.search_query;\n    var searchFields = searchFilter.search_fields;\n\n    if (searchQuery_1 && searchFields && searchFields.length > 0) {\n      if (!searchFields.some(function (searchField) {\n        switch (searchField) {\n          case 'channel_name':\n            {\n              return channel.name.toLowerCase().includes(searchQuery_1.toLowerCase());\n            }\n\n          case 'member_nickname':\n            {\n              return channel.members.some(function (member) {\n                return member.nickname.toLowerCase().includes(searchQuery_1.toLowerCase());\n              });\n            }\n\n          default:\n            {\n              return true;\n            }\n        }\n      })) {\n        return false;\n      }\n    }\n  }\n\n  if (((_d = (_c = params === null || params === void 0 ? void 0 : params._userIdsFilter) === null || _c === void 0 ? void 0 : _c.userIds) === null || _d === void 0 ? void 0 : _d.length) > 0) {\n    var userIdsFilter = params._userIdsFilter;\n    var includeMode = userIdsFilter.includeMode,\n        queryType = userIdsFilter.queryType;\n    var userIds = userIdsFilter.userIds;\n    var memberIds_1 = channel.members.map(function (member) {\n      return member.userId;\n    });\n\n    if (!includeMode) {\n      // exact match\n      if (!userIds.includes(currentUserId)) {\n        userIds.push(currentUserId); // add the caller's userId if not added already.\n      }\n\n      if (channel.members.length > userIds.length) {\n        return false; // userIds may contain one or more non-member(s).\n      }\n\n      if (!hasSameMembers(userIds, memberIds_1)) {\n        return false;\n      }\n    } else if (userIds.length > 0) {\n      // inclusive\n      switch (queryType) {\n        case 'AND':\n          {\n            if (userIds.some(function (userId) {\n              return !memberIds_1.includes(userId);\n            })) {\n              return false;\n            }\n\n            break;\n          }\n\n        case 'OR':\n          {\n            if (userIds.every(function (userId) {\n              return !memberIds_1.includes(userId);\n            })) {\n              return false;\n            }\n\n            break;\n          }\n      }\n    }\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.includeEmpty) === false && (channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.includeFrozen) === false && (channel === null || channel === void 0 ? void 0 : channel.isFrozen) === true) {\n    return false;\n  }\n\n  if (((_e = params === null || params === void 0 ? void 0 : params.customTypesFilter) === null || _e === void 0 ? void 0 : _e.length) > 0 && !params.customTypesFilter.includes(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.customTypeStartsWithFilter) && !new RegExp(\"^\" + params.customTypeStartsWithFilter).test(channel === null || channel === void 0 ? void 0 : channel.customType)) {\n    return false;\n  }\n\n  if ((params === null || params === void 0 ? void 0 : params.channelNameContainsFilter) && !((_f = channel === null || channel === void 0 ? void 0 : channel.name) === null || _f === void 0 ? void 0 : _f.toLowerCase().includes(params.channelNameContainsFilter.toLowerCase()))) {\n    return false;\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.nicknameContainsFilter) {\n    var lowerCasedSubString_1 = params.nicknameContainsFilter.toLowerCase();\n\n    if ((_g = channel === null || channel === void 0 ? void 0 : channel.members) === null || _g === void 0 ? void 0 : _g.every(function (member) {\n      return !member.nickname.toLowerCase().includes(lowerCasedSubString_1);\n    })) {\n      return false;\n    }\n  }\n\n  if (((_h = params === null || params === void 0 ? void 0 : params.channelUrlsFilter) === null || _h === void 0 ? void 0 : _h.length) > 0 && !params.channelUrlsFilter.includes(channel === null || channel === void 0 ? void 0 : channel.url)) {\n    return false;\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.memberStateFilter) {\n    switch (params.memberStateFilter) {\n      case 'joined_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'joined') {\n          return false;\n        }\n\n        break;\n\n      case 'invited_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited') {\n          return false;\n        }\n\n        break;\n\n      case 'invited_by_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || !isFriend(channel.inviter)) {\n          return false;\n        }\n\n        break;\n\n      case 'invited_by_non_friend':\n        if ((channel === null || channel === void 0 ? void 0 : channel.myMemberState) !== 'invited' || isFriend(channel.inviter)) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.hiddenChannelFilter) {\n    switch (params.hiddenChannelFilter) {\n      case 'unhidden_only':\n        if ((channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'unhidden') {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_only':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden)) {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_allow_auto_unhide':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_allow_auto_unhide') {\n          return false;\n        }\n\n        break;\n\n      case 'hidden_prevent_auto_unhide':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isHidden) || (channel === null || channel === void 0 ? void 0 : channel.hiddenState) !== 'hidden_prevent_auto_unhide') {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.unreadChannelFilter) {\n    switch (params.unreadChannelFilter) {\n      case 'unread_message':\n        if ((channel === null || channel === void 0 ? void 0 : channel.unreadMessageCount) === 0) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.publicChannelFilter) {\n    switch (params.publicChannelFilter) {\n      case 'public':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isPublic)) {\n          return false;\n        }\n\n        break;\n\n      case 'private':\n        if (channel === null || channel === void 0 ? void 0 : channel.isPublic) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  if (params === null || params === void 0 ? void 0 : params.superChannelFilter) {\n    switch (params.superChannelFilter) {\n      case 'super':\n        if (!(channel === null || channel === void 0 ? void 0 : channel.isSuper)) {\n          return false;\n        }\n\n        break;\n\n      case 'nonsuper':\n        if (channel === null || channel === void 0 ? void 0 : channel.isSuper) {\n          return false;\n        }\n\n        break;\n    }\n  }\n\n  return true;\n};\n\nvar binarySearch = function binarySearch(list, number) {\n  var pivot = Math.floor(list.length / 2);\n\n  if (list[pivot] === number) {\n    return pivot;\n  }\n\n  var leftList = list.slice(0, pivot);\n  var rightList = list.slice(pivot + 1, list.length);\n\n  if (list[pivot] > number) {\n    return pivot + 1 + (rightList.length === 0 ? 0 : binarySearch(rightList, number));\n  } else {\n    return leftList.length === 0 ? pivot : binarySearch(leftList, number);\n  }\n}; // This is required when channel is displayed on channel list by filter\n\n\nvar getChannelsWithUpsertedChannel = function getChannelsWithUpsertedChannel(channels, channel) {\n  var _a;\n\n  if (channels.some(function (ch) {\n    return ch.url === channel.url;\n  })) {\n    return channels.map(function (ch) {\n      return ch.url === channel.url ? channel : ch;\n    });\n  }\n\n  var targetIndex = binarySearch(channels.map(function (channel) {\n    var _a;\n\n    return ((_a = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a === void 0 ? void 0 : _a.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt);\n  }), ((_a = channel === null || channel === void 0 ? void 0 : channel.lastMessage) === null || _a === void 0 ? void 0 : _a.createdAt) || (channel === null || channel === void 0 ? void 0 : channel.createdAt));\n  return __spreadArray(__spreadArray(__spreadArray([], channels.slice(0, targetIndex), true), [channel], false), channels.slice(targetIndex, channels.length), true);\n};\n\nvar IconButton = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n      children = props.children,\n      disabled = props.disabled,\n      width = props.width,\n      height = props.height,\n      type = props.type,\n      _onClick = props.onClick,\n      _onBlur = props.onBlur,\n      style = props.style;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      pressed = _useState2[0],\n      setPressed = _useState2[1];\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/button-has-type\n    React__default.createElement(\"button\", {\n      className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-iconbutton', pressed]).join(' '),\n      disabled: disabled,\n      ref: ref,\n      type: type // eslint-disable-line react/button-has-type\n      ,\n      style: _objectSpread2(_objectSpread2({}, style), {}, {\n        height: height,\n        width: width\n      }),\n      onClick: function onClick(e) {\n        if (disabled) {\n          return;\n        }\n\n        setPressed('sendbird-iconbutton--pressed');\n\n        _onClick(e);\n      },\n      onBlur: function onBlur(e) {\n        setPressed('');\n\n        _onBlur(e);\n      }\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: \"sendbird-iconbutton__inner\"\n    }, children))\n  );\n});\nIconButton.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.any]).isRequired,\n  disabled: PropTypes.bool,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  onBlur: PropTypes.func,\n  style: PropTypes.shape({})\n};\nIconButton.defaultProps = {\n  className: '',\n  disabled: false,\n  width: '56px',\n  height: '56px',\n  type: 'button',\n  onClick: function onClick() {},\n  onBlur: function onBlur() {},\n  style: {}\n}; // simple component to be used as modal root\n\nvar MODAL_ROOT = 'sendbird-modal-root';\nvar Type = {\n  PRIMARY: 'PRIMARY',\n  SECONDARY: 'SECONDARY',\n  DANGER: 'DANGER',\n  DISABLED: 'DISABLED'\n};\nvar Size = {\n  BIG: 'BIG',\n  SMALL: 'SMALL'\n};\n\nfunction changeTypeToClassName(type) {\n  switch (type) {\n    case Type.PRIMARY:\n      return 'sendbird-button--primary';\n\n    case Type.SECONDARY:\n      return 'sendbird-button--secondary';\n\n    case Type.DANGER:\n      return 'sendbird-button--danger';\n\n    case Type.DISABLED:\n      return 'sendbird-button--disabled';\n\n    default:\n      return null;\n  }\n}\n\nfunction changeSizeToClassName(size) {\n  switch (size) {\n    case Size.BIG:\n      return 'sendbird-button--big';\n\n    case Size.SMALL:\n      return 'sendbird-button--small';\n\n    default:\n      return null;\n  }\n}\n\nfunction Button(_ref) {\n  var className = _ref.className,\n      type = _ref.type,\n      size = _ref.size,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      onClick = _ref.onClick;\n  var injectingClassNames = [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-button', disabled ? 'sendbird-button__disabled' : '', changeTypeToClassName(type), changeSizeToClassName(size)]).join(' ');\n  return /*#__PURE__*/React__default.createElement(\"button\", {\n    className: injectingClassNames,\n    type: \"button\",\n    onClick: onClick,\n    disabled: disabled\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-button__text\",\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.ONCONTENT_1\n  }, children));\n}\n\nvar ButtonTypes = Type;\nvar ButtonSizes = Size;\nButton.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  type: PropTypes.oneOf(Object.keys(Type)),\n  size: PropTypes.oneOf(Object.keys(Size)),\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  className: '',\n  type: Type.PRIMARY,\n  size: Size.BIG,\n  children: 'Button',\n  disabled: false,\n  onClick: function onClick() {}\n};\n\nvar ModalHeader = function ModalHeader(_ref) {\n  var titleText = _ref.titleText;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__header\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, titleText));\n};\n\nModalHeader.propTypes = {\n  titleText: PropTypes.string.isRequired\n};\n\nvar ModalBody = function ModalBody(_ref2) {\n  var children = _ref2.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__body\"\n  }, children);\n};\n\nModalBody.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element.isRequired, PropTypes.arrayOf(PropTypes.element.isRequired)])\n};\nModalBody.defaultProps = {\n  children: null\n};\n\nvar ModalFooter = function ModalFooter(_ref3) {\n  var onSubmit = _ref3.onSubmit,\n      onCancel = _ref3.onCancel,\n      _ref3$disabled = _ref3.disabled,\n      disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,\n      submitText = _ref3.submitText,\n      type = _ref3.type;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__footer\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    onClick: onCancel\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.BUTTON_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, stringSet.BUTTON__CANCEL)), /*#__PURE__*/React__default.createElement(Button, {\n    type: type,\n    disabled: disabled,\n    onClick: onSubmit\n  }, submitText));\n};\n\nModalFooter.propTypes = {\n  onCancel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  submitText: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  type: PropTypes.string\n};\nModalFooter.defaultProps = {\n  disabled: false,\n  type: ButtonTypes.DANGER\n};\n\nfunction Modal(props) {\n  var children = props.children,\n      onCancel = props.onCancel,\n      onSubmit = props.onSubmit,\n      disabled = props.disabled,\n      submitText = props.submitText,\n      titleText = props.titleText,\n      hideFooter = props.hideFooter,\n      type = props.type;\n  return /*#__PURE__*/createPortal( /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__content\"\n  }, /*#__PURE__*/React__default.createElement(ModalHeader, {\n    titleText: titleText\n  }), /*#__PURE__*/React__default.createElement(ModalBody, null, children), !hideFooter && /*#__PURE__*/React__default.createElement(ModalFooter, {\n    disabled: disabled,\n    onCancel: onCancel,\n    onSubmit: onSubmit,\n    submitText: submitText,\n    type: type\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__close\"\n  }, /*#__PURE__*/React__default.createElement(IconButton, {\n    width: \"32px\",\n    height: \"32px\",\n    onClick: onCancel\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.DEFAULT,\n    width: \"24px\",\n    height: \"24px\"\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-modal__backdrop\"\n  })), document.getElementById(MODAL_ROOT));\n}\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  onCancel: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  hideFooter: PropTypes.bool,\n  disabled: PropTypes.bool,\n  type: PropTypes.string\n};\nModal.defaultProps = {\n  children: null,\n  hideFooter: false,\n  disabled: false,\n  type: ButtonTypes.DANGER\n};\nvar Colors = {\n  ONBACKGROUND_1: 'ONBACKGROUND_1',\n  ONBACKGROUND_2: 'ONBACKGROUND_2',\n  ONBACKGROUND_3: 'ONBACKGROUND_3',\n  ONBACKGROUND_4: 'ONBACKGROUND_4',\n  ONCONTENT_1: 'ONCONTENT_1',\n  PRIMARY: 'PRIMARY',\n  ERROR: 'ERROR'\n};\n\nfunction changeColorToClassName(color) {\n  switch (color) {\n    case Colors.ONBACKGROUND_1:\n      return 'sendbird-color--onbackground-1';\n\n    case Colors.ONBACKGROUND_2:\n      return 'sendbird-color--onbackground-2';\n\n    case Colors.ONBACKGROUND_3:\n      return 'sendbird-color--onbackground-3';\n\n    case Colors.ONBACKGROUND_4:\n      return 'sendbird-color--onbackground-4';\n\n    case Colors.ONCONTENT_1:\n      return 'sendbird-color--oncontent-1';\n\n    case Colors.PRIMARY:\n      return 'sendbird-color--primary';\n\n    case Colors.ERROR:\n      return 'sendbird-color--error';\n\n    default:\n      return null;\n  }\n}\n\nfunction TextButton(_ref) {\n  var className = _ref.className,\n      color = _ref.color,\n      disabled = _ref.disabled,\n      notUnderline = _ref.notUnderline,\n      onClick = _ref.onClick,\n      children = _ref.children;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [changeColorToClassName(color), notUnderline ? 'sendbird-textbutton--not-underline' : 'sendbird-textbutton', disabled ? 'sendbird-textbutton--disabled' : '']).join(' '),\n    role: \"button\",\n    tabIndex: 0,\n    onClick: onClick,\n    onKeyPress: onClick\n  }, children);\n}\n\nTextButton.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  notUnderline: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired\n};\nTextButton.defaultProps = {\n  className: '',\n  color: Colors.ONBACKGROUND_1,\n  disabled: false,\n  notUnderline: false,\n  onClick: function onClick() {}\n};\nvar SEND_MESSAGE_START = 'SEND_MESSAGE_START';\nvar SEND_USER_MESSAGE = 'SEND_USER_MESSAGE';\nvar SEND_FILE_MESSAGE = 'SEND_FILE_MESSAGE';\nvar UPDATE_USER_MESSAGE = 'UPDATE_USER_MESSAGE';\nvar DELETE_MESSAGE = 'DELETE_MESSAGE';\nvar LEAVE_CHANNEL = 'LEAVE_CHANNEL';\nvar CREATE_CHANNEL = 'CREATE_CHANNEL';\n\nvar getSdk = function getSdk(store) {\n  var _store$stores = store.stores,\n      stores = _store$stores === void 0 ? {} : _store$stores;\n  var _stores$sdkStore = stores.sdkStore,\n      sdkStore = _stores$sdkStore === void 0 ? {} : _stores$sdkStore;\n  var sdk = sdkStore.sdk;\n  return sdk;\n};\n\nvar getPubSub = function getPubSub(store) {\n  var _store$config = store.config,\n      config = _store$config === void 0 ? {} : _store$config;\n  var pubSub = config.pubSub;\n  return pubSub;\n}; // SendBird disconnect. Invalidates currentUser\n// eslint-disable-next-line max-len\n\n\nvar getConnect = function getConnect(store) {\n  return function (userId, accessToken) {\n    return new Promise(function (resolve, reject) {\n      var sdk = getSdk(store);\n\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      if (!accessToken) {\n        sdk.connect(userId).then(function (res) {\n          return resolve(res);\n        }).catch(function (err) {\n          return reject(err);\n        });\n      } else {\n        sdk.connect(userId, accessToken).then(function (res) {\n          return resolve(res);\n        }).catch(function (err) {\n          return reject(err);\n        });\n      }\n    });\n  };\n}; // SendBird disconnect. Invalidates currentUser\n\n\nvar getDisconnect = function getDisconnect(store) {\n  return function () {\n    return new Promise(function (resolve, reject) {\n      var sdk = getSdk(store);\n\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.disconnect().then(function (res) {\n        return resolve(res);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  };\n}; // Using the updateCurrentUserInfo() method\n// you can update a user's nickname and profile image with a URL\n// eslint-disable-next-line max-len\n\n\nvar getUpdateUserInfo = function getUpdateUserInfo(store) {\n  return function (nickName, profileUrl) {\n    return new Promise(function (resolve, reject) {\n      var sdk = getSdk(store);\n\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.updateCurrentUserInfo(nickName, profileUrl).then(function (res) {\n        return resolve(res);\n      }).catch(function (err) {\n        return reject(err);\n      });\n    });\n  };\n};\n\nvar getSendUserMessage = function getSendUserMessage(store) {\n  return function (channelUrl, userMessageParams) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        var promisify = function promisify() {\n          var pendingMsg = null;\n          var pendingPromise = new Promise(function (resolve_, reject_) {\n            pendingMsg = channel.sendUserMessage(userMessageParams, function (res, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n              var message = res;\n              var error = err;\n\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n\n              resolve_(message);\n              pubsub.publish(SEND_USER_MESSAGE, {\n                message: message,\n                channel: channel\n              });\n            });\n            pubsub.publish(SEND_MESSAGE_START, {\n              message: pendingMsg,\n              channel: channel\n            });\n          });\n\n          pendingPromise.get = function () {\n            return pendingMsg;\n          };\n\n          return pendingPromise;\n        };\n\n        resolve(promisify());\n      }).catch(reject);\n    });\n  };\n};\n\nvar getSendFileMessage = function getSendFileMessage(store) {\n  return function (channelUrl, fileMessageParams) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        var promisify = function promisify() {\n          var pendingMsg = null;\n          var pendingPromise = new Promise(function (resolve_, reject_) {\n            pendingMsg = channel.sendFileMessage(fileMessageParams, function (res, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n              var message = res;\n              var error = err;\n\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n\n              resolve_(message);\n              pubsub.publish(SEND_FILE_MESSAGE, {\n                message: message,\n                channel: channel\n              });\n            });\n          });\n\n          if (fileMessageParams.file) {\n            // keep the file's local version in pendingMsg.localUrl\n            // because promise doesnt allow overriding of pendingMsg.url\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = URL.createObjectURL(fileMessageParams.file);\n          }\n\n          if (fileMessageParams.fileUrl) {\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = fileMessageParams.fileUrl;\n          } // eslint-disable-next-line no-param-reassign\n\n\n          pendingMsg.requestState = 'pending';\n          pubsub.publish(SEND_MESSAGE_START, {\n            message: pendingMsg,\n            channel: channel\n          });\n\n          pendingPromise.get = function () {\n            return pendingMsg;\n          };\n\n          return pendingPromise;\n        };\n\n        resolve(promisify());\n      }).catch(reject);\n    });\n  };\n};\n\nvar getUpdateUserMessage = function getUpdateUserMessage(store) {\n  return function (channelUrl, messageId, params) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.updateUserMessage(messageId, params, function (res, err) {\n          var swapParams = sdk.getErrorFirstCallback();\n          var message = res;\n          var error = err;\n\n          if (swapParams) {\n            message = err;\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(message);\n          pubsub.publish(UPDATE_USER_MESSAGE, {\n            message: message,\n            channel: channel,\n            // workaround for updating channelPreview on message-edit\n            // https://sendbird.atlassian.net/browse/UIKIT-268\n            fromSelector: true\n          });\n        });\n      }).catch(reject);\n    });\n  };\n};\n\nvar getDeleteMessage = function getDeleteMessage(store) {\n  return function (channelUrl, message) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        var messageId = message.messageId;\n        channel.deleteMessage(message, function (res, err) {\n          var swapParams = sdk.getErrorFirstCallback();\n          var error = err;\n\n          if (swapParams) {\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(message);\n          pubsub.publish(DELETE_MESSAGE, {\n            messageId: messageId,\n            channel: channel\n          });\n        });\n      }).catch(reject);\n    });\n  };\n};\n\nvar getResendUserMessage = function getResendUserMessage(store) {\n  return function (channelUrl, failedMessage) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.resendUserMessage(failedMessage).then(function (message) {\n          resolve(message);\n          pubsub.publish(SEND_USER_MESSAGE, {\n            message: message,\n            channel: channel\n          });\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getResendFileMessage = function getResendFileMessage(store) {\n  return function (channelUrl, failedMessage) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.resendFileMessage(failedMessage).then(function (message) {\n          resolve(message);\n          pubsub.publish(SEND_FILE_MESSAGE, {\n            message: message,\n            channel: channel\n          });\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getCreateChannel = function getCreateChannel(store) {\n  return function (params) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.createChannel(params).then(function (channel) {\n        resolve(channel);\n        pubsub.publish(CREATE_CHANNEL, {\n          channel: channel\n        });\n      }).catch(reject);\n    });\n  };\n};\n\nvar getLeaveChannel = function getLeaveChannel(store) {\n  return function (channelUrl) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.leave().then(function () {\n          resolve(channel);\n          pubsub.publish(LEAVE_CHANNEL, {\n            channel: channel\n          });\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getFreezeChannel = function getFreezeChannel(store) {\n  return function (channelUrl) {\n    var sdk = getSdk(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.freeze().then(function () {\n          // do not need pubsub here - event listener works\n          resolve(channel);\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getUnFreezeChannel = function getUnFreezeChannel(store) {\n  return function (channelUrl) {\n    var sdk = getSdk(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.GroupChannel.getChannel(channelUrl).then(function (channel) {\n        channel.unfreeze().then(function () {\n          // do not need pubsub here - event listener works\n          resolve(channel);\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getCreateOpenChannel = function getCreateOpenChannel(store) {\n  return function (params) {\n    var sdk = getSdk(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.createChannel(params).then(function (channel) {\n        resolve(channel);\n      }).catch(reject);\n    });\n  };\n};\n\nvar enterOpenChannel = function enterOpenChannel(store) {\n  return function (channelUrl) {\n    var sdk = getSdk(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n        if (error) {\n          reject(new Error(error));\n          return;\n        }\n\n        openChannel.enter(function (response, enterError) {\n          if (error) {\n            reject(new Error(enterError));\n            return;\n          }\n\n          resolve(response);\n        });\n      });\n    });\n  };\n};\n\nvar exitOpenChannel = function exitOpenChannel(store) {\n  return function (channelUrl) {\n    var sdk = getSdk(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl, function (openChannel, error) {\n        if (error) {\n          reject(new Error(error));\n          return;\n        }\n\n        openChannel.exit(function (response, exitError) {\n          if (error) {\n            reject(new Error(exitError));\n            return;\n          }\n\n          resolve(response);\n        });\n      });\n    });\n  };\n};\n\nvar getOpenChannelSendUserMessage = function getOpenChannelSendUserMessage(store) {\n  return function (channelUrl, userMessageParams) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        var promisify = function promisify() {\n          var pendingMsg = null;\n          var pendingPromise = new Promise(function (resolve_, reject_) {\n            pendingMsg = channel.sendUserMessage(userMessageParams, function (res, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n              var message = res;\n              var error = err;\n\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n\n              resolve_(message);\n              pubsub.publish(SEND_USER_MESSAGE, {\n                message: message,\n                channel: channel\n              });\n            });\n            pubsub.publish(SEND_MESSAGE_START, {\n              message: pendingMsg,\n              channel: channel\n            });\n          });\n\n          pendingPromise.get = function () {\n            return pendingMsg;\n          };\n\n          return pendingPromise;\n        };\n\n        resolve(promisify());\n      }).catch(reject);\n    });\n  };\n};\n\nvar getOpenChannelSendFileMessage = function getOpenChannelSendFileMessage(store) {\n  return function (channelUrl, fileMessageParams) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        var promisify = function promisify() {\n          var pendingMsg = null;\n          var pendingPromise = new Promise(function (resolve_, reject_) {\n            pendingMsg = channel.sendFileMessage(fileMessageParams, function (res, err) {\n              var swapParams = sdk.getErrorFirstCallback();\n              var message = res;\n              var error = err;\n\n              if (swapParams) {\n                message = err;\n                error = res;\n              }\n\n              if (error) {\n                reject_(error);\n                return;\n              }\n\n              resolve_(message);\n              pubsub.publish(SEND_FILE_MESSAGE, {\n                message: message,\n                channel: channel\n              });\n            });\n          });\n\n          if (fileMessageParams.file) {\n            // keep the file's local version in pendingMsg.localUrl\n            // because promise doesnt allow overriding of pendingMsg.url\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = URL.createObjectURL(fileMessageParams.file);\n          }\n\n          if (fileMessageParams.fileUrl) {\n            // eslint-disable-next-line no-param-reassign\n            pendingMsg.localUrl = fileMessageParams.fileUrl;\n          } // eslint-disable-next-line no-param-reassign\n\n\n          pendingMsg.requestState = 'pending';\n          pubsub.publish(SEND_MESSAGE_START, {\n            message: pendingMsg,\n            channel: channel\n          });\n\n          pendingPromise.get = function () {\n            return pendingMsg;\n          };\n\n          return pendingPromise;\n        };\n\n        resolve(promisify());\n      }).catch(reject);\n    });\n  };\n};\n\nvar getOpenChannelUpdateUserMessage = function getOpenChannelUpdateUserMessage(store) {\n  return function (channelUrl, messageId, params) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        channel.updateUserMessage(messageId, params, function (res, err) {\n          var swapParams = sdk.getErrorFirstCallback();\n          var message = res;\n          var error = err;\n\n          if (swapParams) {\n            message = err;\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(message);\n          pubsub.publish(UPDATE_USER_MESSAGE, {\n            message: message,\n            channel: channel,\n            // workaround for updating channelPreview on message-edit\n            // https://sendbird.atlassian.net/browse/UIKIT-268\n            fromSelector: true\n          });\n        });\n      }).catch(reject);\n    });\n  };\n};\n\nvar getOpenChannelDeleteMessage = function getOpenChannelDeleteMessage(store) {\n  return function (channelUrl, message) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        var messageId = message.messageId;\n        channel.deleteMessage(message, function (res, err) {\n          var swapParams = sdk.getErrorFirstCallback();\n          var error = err;\n\n          if (swapParams) {\n            error = res;\n          }\n\n          if (error) {\n            reject(error);\n            return;\n          }\n\n          resolve(message);\n          pubsub.publish(DELETE_MESSAGE, {\n            messageId: messageId,\n            channel: channel\n          });\n        });\n      }).catch(reject);\n    });\n  };\n};\n\nvar getOpenChannelResendUserMessage = function getOpenChannelResendUserMessage(store) {\n  return function (channelUrl, failedMessage) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        channel.resendUserMessage(failedMessage).then(function (message) {\n          resolve(message);\n          pubsub.publish(SEND_USER_MESSAGE, {\n            message: message,\n            channel: channel\n          });\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar getOpenChannelResendFileMessage = function getOpenChannelResendFileMessage(store) {\n  return function (channelUrl, failedMessage) {\n    var sdk = getSdk(store);\n    var pubsub = getPubSub(store);\n    return new Promise(function (resolve, reject) {\n      if (!sdk) {\n        reject(new Error('Sdk not found'));\n      }\n\n      sdk.OpenChannel.getChannel(channelUrl).then(function (channel) {\n        channel.resendFileMessage(failedMessage).then(function (message) {\n          resolve(message);\n          pubsub.publish(SEND_FILE_MESSAGE, {\n            message: message,\n            channel: channel\n          });\n        }).catch(reject);\n      }).catch(reject);\n    });\n  };\n};\n\nvar selectors = {\n  getSdk: getSdk,\n  getConnect: getConnect,\n  getDisconnect: getDisconnect,\n  getUpdateUserInfo: getUpdateUserInfo,\n  getSendUserMessage: getSendUserMessage,\n  getSendFileMessage: getSendFileMessage,\n  getUpdateUserMessage: getUpdateUserMessage,\n  getDeleteMessage: getDeleteMessage,\n  getResendUserMessage: getResendUserMessage,\n  getResendFileMessage: getResendFileMessage,\n  getFreezeChannel: getFreezeChannel,\n  getUnFreezeChannel: getUnFreezeChannel,\n  getCreateChannel: getCreateChannel,\n  getLeaveChannel: getLeaveChannel,\n  getCreateOpenChannel: getCreateOpenChannel,\n  getEnterOpenChannel: enterOpenChannel,\n  getExitOpenChannel: exitOpenChannel,\n  getOpenChannelSendUserMessage: getOpenChannelSendUserMessage,\n  getOpenChannelSendFileMessage: getOpenChannelSendFileMessage,\n  getOpenChannelUpdateUserMessage: getOpenChannelUpdateUserMessage,\n  getOpenChannelDeleteMessage: getOpenChannelDeleteMessage,\n  getOpenChannelResendUserMessage: getOpenChannelResendUserMessage,\n  getOpenChannelResendFileMessage: getOpenChannelResendFileMessage\n};\n\nfunction UserProfile(_a) {\n  var user = _a.user,\n      currentUserId = _a.currentUserId,\n      sdk = _a.sdk,\n      logger = _a.logger,\n      _b = _a.disableMessaging,\n      disableMessaging = _b === void 0 ? false : _b,\n      createChannel = _a.createChannel,\n      onSuccess = _a.onSuccess;\n  var stringSet = useContext(LocalizationContext).stringSet;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird__user-profile\"\n  }, /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird__user-profile-avatar\"\n  }, /*#__PURE__*/React__default.createElement(Avatar, {\n    height: \"80px\",\n    width: \"80px\",\n    src: user.profileUrl\n  })), /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird__user-profile-name\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.nickname || stringSet.NO_NAME)), user.userId !== currentUserId && !disableMessaging && /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird__user-profile-message\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    type: ButtonTypes.SECONDARY,\n    onClick: function onClick() {\n      var params = new sdk.GroupChannelParams();\n      params.isDistinct = true;\n      params.addUserIds([user.userId]);\n      onSuccess();\n      createChannel(params).then(function (groupChannel) {\n        logger.info('UserProfile, channel create', groupChannel);\n      });\n    }\n  }, stringSet.USER_PROFILE__MESSAGE)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird__user-profile-separator\"\n  }), /*#__PURE__*/React__default.createElement(\"section\", {\n    className: \"sendbird__user-profile-userId\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird__user-profile-userId--label\",\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, stringSet.USER_PROFILE__USER_ID), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird__user-profile-userId--value\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, user.userId)));\n}\n\nvar mapStoreToProps = function mapStoreToProps(store) {\n  return {\n    sdk: getSdk(store),\n    createChannel: getCreateChannel(store),\n    logger: store.config.logger,\n    pubsub: store.config.pubSub\n  };\n};\n\nvar ConnectedUserProfile = withSendbirdContext(UserProfile, mapStoreToProps);\n\nvar MenuItems$1 = /*#__PURE__*/function (_Component) {\n  _inherits(MenuItems, _Component);\n\n  var _super = _createSuper(MenuItems);\n\n  function MenuItems(props) {\n    var _this;\n\n    _classCallCheck(this, MenuItems);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"showParent\", function () {\n      var _this$props$parentCon = _this.props.parentContainRef,\n          parentContainRef = _this$props$parentCon === void 0 ? {} : _this$props$parentCon;\n      var current = parentContainRef.current;\n\n      if (parentContainRef && current) {\n        current.classList.add('sendbird-icon--pressed');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideParent\", function () {\n      var _this$props$parentCon2 = _this.props.parentContainRef,\n          parentContainRef = _this$props$parentCon2 === void 0 ? {} : _this$props$parentCon2;\n      var current = parentContainRef.current;\n\n      if (parentContainRef && current) {\n        current.classList.remove('sendbird-icon--pressed');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setupEvents\", function () {\n      var closeDropdown = _this.props.closeDropdown;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          menuRef = _assertThisInitialize.menuRef;\n\n      var handleClickOutside = function handleClickOutside(event) {\n        if (menuRef.current && !menuRef.current.contains(event.target)) {\n          closeDropdown();\n        }\n      };\n\n      _this.setState({\n        handleClickOutside: handleClickOutside\n      });\n\n      document.addEventListener('mousedown', handleClickOutside);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cleanUpEvents\", function () {\n      var handleClickOutside = _this.state.handleClickOutside;\n      document.removeEventListener('mousedown', handleClickOutside);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMenuPosition\", function () {\n      var _this$props = _this.props,\n          parentRef = _this$props.parentRef,\n          openLeft = _this$props.openLeft;\n      var parentRect = parentRef.current.getBoundingClientRect();\n      var x = parentRect.x || parentRect.left;\n      var y = parentRect.y || parentRect.top;\n      var menuStyle = {\n        top: y,\n        left: x\n      };\n      if (!_this.menuRef.current) return menuStyle;\n      var _window = window,\n          innerWidth = _window.innerWidth,\n          innerHeight = _window.innerHeight;\n\n      var rect = _this.menuRef.current.getBoundingClientRect();\n\n      if (y + rect.height > innerHeight) {\n        menuStyle.top -= rect.height;\n      }\n\n      if (x + rect.width > innerWidth && !openLeft) {\n        menuStyle.left -= rect.width;\n      }\n\n      if (menuStyle.top < 0) {\n        menuStyle.top = rect.height < innerHeight ? (innerHeight - rect.height) / 2 : 0;\n      }\n\n      if (menuStyle.left < 0) {\n        menuStyle.left = rect.width < innerWidth ? (innerWidth - rect.width) / 2 : 0;\n      }\n\n      menuStyle.top += 32;\n\n      if (openLeft) {\n        var padding = Number.isNaN(rect.width - 30) ? 108 // default\n        : rect.width - 30;\n        menuStyle.left -= padding;\n      }\n\n      return _this.setState({\n        menuStyle: menuStyle\n      });\n    });\n\n    _this.menuRef = /*#__PURE__*/React__default.createRef();\n    _this.state = {\n      menuStyle: {},\n      handleClickOutside: function handleClickOutside() {}\n    };\n    return _this;\n  }\n\n  _createClass(MenuItems, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupEvents();\n      this.getMenuPosition();\n      this.showParent();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cleanUpEvents();\n      this.hideParent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var menuStyle = this.state.menuStyle;\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          style = _this$props2.style;\n      return /*#__PURE__*/createPortal( /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-dropdown__menu-backdrop\"\n      }), /*#__PURE__*/React__default.createElement(\"ul\", {\n        className: \"sendbird-dropdown__menu\",\n        ref: this.menuRef,\n        style: _objectSpread2({\n          display: 'inline-block',\n          position: 'fixed',\n          left: \"\".concat(Math.round(menuStyle.left), \"px\"),\n          top: \"\".concat(Math.round(menuStyle.top), \"px\")\n        }, style)\n      }, children)), document.getElementById('sendbird-dropdown-portal'));\n    }\n  }]);\n\n  return MenuItems;\n}(Component);\n\nMenuItems$1.propTypes = {\n  closeDropdown: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n  style: PropTypes.shape({}),\n  // https://stackoverflow.com/a/51127130\n  parentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]).isRequired,\n  parentContainRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]).isRequired,\n  openLeft: PropTypes.bool\n};\nMenuItems$1.defaultProps = {\n  style: {},\n  openLeft: false\n};\nvar componentClassName = 'sendbird-sort-by-row';\n\nfunction SortByRow(_ref) {\n  var className = _ref.className,\n      maxItemCount = _ref.maxItemCount,\n      itemWidth = _ref.itemWidth,\n      itemHeight = _ref.itemHeight,\n      children = _ref.children;\n\n  if (children.length > maxItemCount) {\n    var result = [];\n\n    for (var i = 0; i < children.length; i += maxItemCount) {\n      result.push( /*#__PURE__*/React__default.createElement(\"div\", {\n        className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [componentClassName]).join(' '),\n        key: className + i,\n        style: {\n          width: itemWidth * maxItemCount,\n          height: itemHeight\n        }\n      }, children.slice(i, i + maxItemCount)));\n    }\n\n    return result;\n  }\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), [componentClassName]).join(' '),\n    style: {\n      width: itemWidth * children.length,\n      height: itemHeight\n    }\n  }, children);\n}\n\nSortByRow.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  maxItemCount: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  itemHeight: PropTypes.number.isRequired,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired\n};\nSortByRow.defaultProps = {\n  className: ''\n};\n\nvar EmojiListItems$1 = /*#__PURE__*/function (_Component) {\n  _inherits(EmojiListItems, _Component);\n\n  var _super = _createSuper(EmojiListItems);\n\n  function EmojiListItems(props) {\n    var _this;\n\n    _classCallCheck(this, EmojiListItems);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"showParent\", function () {\n      var _this$props$parentCon = _this.props.parentContainRef,\n          parentContainRef = _this$props$parentCon === void 0 ? {} : _this$props$parentCon;\n      var current = parentContainRef.current;\n\n      if (parentContainRef && current) {\n        current.classList.add('sendbird-reactions--pressed');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideParent\", function () {\n      var _this$props$parentCon2 = _this.props.parentContainRef,\n          parentContainRef = _this$props$parentCon2 === void 0 ? {} : _this$props$parentCon2;\n      var current = parentContainRef.current;\n\n      if (parentContainRef && current) {\n        current.classList.remove('sendbird-reactions--pressed');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setupEvents\", function () {\n      var closeDropdown = _this.props.closeDropdown;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          reactionRef = _assertThisInitialize.reactionRef;\n\n      var handleClickOutside = function handleClickOutside(event) {\n        if (reactionRef.current && !reactionRef.current.contains(event.target)) {\n          closeDropdown();\n        }\n      };\n\n      _this.setState({\n        handleClickOutside: handleClickOutside\n      });\n\n      document.addEventListener('mousedown', handleClickOutside);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"cleanUpEvents\", function () {\n      var handleClickOutside = _this.state.handleClickOutside;\n      document.removeEventListener('mousedown', handleClickOutside);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getBarPosition\", function () {\n      // calculate the location that the context menu should be\n      var _this$props = _this.props,\n          parentRef = _this$props.parentRef,\n          spaceFromTrigger = _this$props.spaceFromTrigger;\n      var spaceFromTriggerX = spaceFromTrigger.x || 0;\n      var spaceFromTriggerY = spaceFromTrigger.y || 0;\n      var parentRect = parentRef.current.getBoundingClientRect();\n      var x = parentRect.x || parentRect.left;\n      var y = parentRect.y || parentRect.top;\n      var reactionStyle = {\n        top: y,\n        left: x\n      };\n      if (!_this.reactionRef.current) return reactionStyle;\n\n      var rect = _this.reactionRef.current.getBoundingClientRect();\n\n      if (reactionStyle.top < rect.height) {\n        reactionStyle.top += parentRect.height;\n        reactionStyle.top += spaceFromTriggerY;\n      } else {\n        reactionStyle.top -= rect.height;\n        reactionStyle.top -= spaceFromTriggerY;\n      }\n\n      reactionStyle.left -= rect.width / 2;\n      reactionStyle.left += parentRect.height / 2 - 2;\n      reactionStyle.left += spaceFromTriggerX;\n      var maximumLeft = window.innerWidth - rect.width;\n\n      if (maximumLeft < reactionStyle.left) {\n        reactionStyle.left = maximumLeft;\n      }\n\n      if (reactionStyle.left < 0) {\n        reactionStyle.left = 0;\n      }\n\n      return _this.setState({\n        reactionStyle: reactionStyle\n      });\n    });\n\n    _this.reactionRef = /*#__PURE__*/React__default.createRef();\n    _this.state = {\n      reactionStyle: {},\n      handleClickOutside: function handleClickOutside() {}\n    };\n    return _this;\n  }\n\n  _createClass(EmojiListItems, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setupEvents();\n      this.getBarPosition();\n      this.showParent();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cleanUpEvents();\n      this.hideParent();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var reactionStyle = this.state.reactionStyle;\n      var children = this.props.children;\n      return /*#__PURE__*/createPortal( /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(\"div\", {\n        className: \"sendbird-dropdown__menu-backdrop\"\n      }), /*#__PURE__*/React__default.createElement(\"ul\", {\n        className: \"sendbird-dropdown__reaction-bar\",\n        ref: this.reactionRef,\n        style: {\n          display: 'inline-block',\n          position: 'fixed',\n          left: \"\".concat(Math.round(reactionStyle.left), \"px\"),\n          top: \"\".concat(Math.round(reactionStyle.top), \"px\")\n        }\n      }, /*#__PURE__*/React__default.createElement(SortByRow, {\n        className: \"sendbird-dropdown__reaction-bar__row\",\n        maxItemCount: 8,\n        itemWidth: 44,\n        itemHeight: 40\n      }, children))), document.getElementById('sendbird-emoji-list-portal'));\n    }\n  }]);\n\n  return EmojiListItems;\n}(Component);\n\nEmojiListItems$1.propTypes = {\n  closeDropdown: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n  parentRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]).isRequired,\n  parentContainRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  })]).isRequired,\n  spaceFromTrigger: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number\n  })\n};\nEmojiListItems$1.defaultProps = {\n  spaceFromTrigger: {}\n};\nvar ENTER = 13;\nvar MenuItems = MenuItems$1;\nvar EmojiListItems = EmojiListItems$1;\n\nvar MenuItem = function MenuItem(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      disable = _ref.disable;\n\n  var handleClickEvent = function handleClickEvent(e) {\n    if (!disable) onClick(e);\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"li\", {\n    className: getClassName([className, 'sendbird-dropdown__menu-item', disable ? 'disable' : '']),\n    role: \"menuitem\",\n    onClick: handleClickEvent,\n    onKeyPress: function onKeyPress(e) {\n      if (e.keyCode === ENTER) handleClickEvent(e);\n    },\n    tabIndex: 0\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-dropdown__menu-item__text\",\n    type: LabelTypography.SUBTITLE_2,\n    color: disable ? LabelColors.ONBACKGROUND_4 : LabelColors.ONBACKGROUND_1\n  }, children));\n};\n\nMenuItem.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  onClick: PropTypes.func.isRequired,\n  disable: PropTypes.bool\n};\nMenuItem.defaultProps = {\n  className: '',\n  disable: false\n}; // Root components should be appended before ContextMenu is rendered\n\nfunction ContextMenu(_ref2) {\n  var menuTrigger = _ref2.menuTrigger,\n      menuItems = _ref2.menuItems;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showMenu = _useState2[0],\n      setShowMenu = _useState2[1];\n\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-context-menu\",\n    style: {\n      display: 'inline'\n    }\n  }, menuTrigger(function () {\n    return setShowMenu(!showMenu);\n  }), showMenu && menuItems(function () {\n    return setShowMenu(false);\n  }));\n}\n\nContextMenu.propTypes = {\n  menuTrigger: PropTypes.func.isRequired,\n  menuItems: PropTypes.func.isRequired\n};\nexport { getOutgoingMessageState as $, copyToClipboard as A, Button as B, ContextMenu as C, DELETE_MESSAGE as D, EmojiListItems as E, getEmojiListAll as F, getEmojiMapAll as G, isReactedBy as H, IconButton as I, getEmojiTooltipString as J, isEditedMessage as K, LEAVE_CHANNEL as L, Modal as M, getUIKitFileType as N, isVideoMessage as O, isGifMessage as P, isUrl as Q, getUIKitFileTypes as R, SEND_MESSAGE_START as S, Type as T, UserProfileContext as U, isThumbnailMessage as V, isVideo as W, isGif as X, isFileMessage as Y, isSupportedFileView as Z, getUIKitMessageTypes as _, TextButton as a, getSenderName as a0, isTextMessage as a1, isOGMessage as a2, getUIKitMessageType as a3, isImageMessage as a4, isAudioMessage as a5, Colors as a6, changeColorToClassName as a7, MODAL_ROOT as a8, isImage as a9, MenuItems as b, MenuItem as c, ButtonTypes as d, ButtonSizes as e, ConnectedUserProfile as f, getSdk as g, UserProfileProvider as h, filterChannelListParams as i, getChannelsWithUpsertedChannel as j, CREATE_CHANNEL as k, UPDATE_USER_MESSAGE as l, getOutgoingMessageStates as m, getSendingMessageStatus as n, SEND_USER_MESSAGE as o, SEND_FILE_MESSAGE as p, filterMessageListParams as q, isSentStatus as r, selectors as s, truncateString as t, getMessageCreatedAt as u, isUserMessage as v, isFailedMessage as w, isPendingMessage as x, isSentMessage as y, getClassName as z };","map":null,"metadata":{},"sourceType":"module"}