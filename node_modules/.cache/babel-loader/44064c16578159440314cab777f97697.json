{"ast":null,"code":"import { _ as __assign, a as _objectSpread2, b as _slicedToArray, u as uuidv4, g as getStringSet, S as SendbirdSdkContext, L as LocalizationProvider } from './LocalizationContext-dfe8b78b.js';\nimport React__default, { useLayoutEffect, useState, useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport Sb from 'sendbird';\nimport { R as RESET_USER, I as INIT_USER, U as UPDATE_USER_INFO } from './actionTypes-3af77038.js';\nimport cssVars from 'css-vars-ponyfill';\nvar INIT_SDK = 'INIT_SDK';\nvar SET_SDK_LOADING = 'SET_SDK_LOADING';\nvar RESET_SDK = 'RESET_SDK';\nvar SDK_ERROR = 'SDK_ERROR';\nvar APP_VERSION_STRING = '2.5.0';\n\nvar disconnectSdk = function disconnectSdk(_ref) {\n  var sdkDispatcher = _ref.sdkDispatcher,\n      userDispatcher = _ref.userDispatcher,\n      sdk = _ref.sdk,\n      onDisconnect = _ref.onDisconnect;\n  sdkDispatcher({\n    type: SET_SDK_LOADING,\n    payload: true\n  });\n\n  if (sdk && sdk.disconnect) {\n    sdk.disconnect().then(function () {\n      sdkDispatcher({\n        type: RESET_SDK\n      });\n      userDispatcher({\n        type: RESET_USER\n      });\n    }).finally(function () {\n      onDisconnect();\n    });\n  } else {\n    onDisconnect();\n  }\n};\n\nvar handleConnection = function handleConnection(_ref2, dispatchers) {\n  var userId = _ref2.userId,\n      appId = _ref2.appId,\n      nickname = _ref2.nickname,\n      profileUrl = _ref2.profileUrl,\n      accessToken = _ref2.accessToken,\n      sdk = _ref2.sdk,\n      logger = _ref2.logger;\n  var sdkDispatcher = dispatchers.sdkDispatcher,\n      userDispatcher = dispatchers.userDispatcher;\n  disconnectSdk({\n    sdkDispatcher: sdkDispatcher,\n    userDispatcher: userDispatcher,\n    sdk: sdk,\n    logger: logger,\n    onDisconnect: function onDisconnect() {\n      logger.info('Setup connection');\n      sdkDispatcher({\n        type: SET_SDK_LOADING,\n        payload: true\n      });\n\n      if (userId && appId) {\n        var newSdk = new Sb({\n          appId: appId\n        }); // to check if code is released version from rollup and *not from storybook*\n        // see rollup config file\n\n        {\n          newSdk.addExtension('sb_uikit', APP_VERSION_STRING);\n        }\n\n        var connectCbSucess = function connectCbSucess(user) {\n          sdkDispatcher({\n            type: INIT_SDK,\n            payload: newSdk\n          });\n          userDispatcher({\n            type: INIT_USER,\n            payload: user\n          }); // use nickname/profileUrl if provided\n          // or set userID as nickname\n\n          if (nickname !== user.nickname || profileUrl !== user.profileUrl) {\n            newSdk.updateCurrentUserInfo(nickname || user.nickname, profileUrl || user.profileUrl).then(function (namedUser) {\n              userDispatcher({\n                type: UPDATE_USER_INFO,\n                payload: namedUser\n              });\n            });\n          }\n        };\n\n        var connectCbError = function connectCbError(e) {\n          logger.error('Connection failed', \"\".concat(e));\n          sdkDispatcher({\n            type: RESET_SDK\n          });\n          sdkDispatcher({\n            type: RESET_USER\n          });\n          sdkDispatcher({\n            type: SDK_ERROR\n          });\n        };\n\n        if (accessToken) {\n          newSdk.connect(userId, accessToken).then(function (res) {\n            return connectCbSucess(res);\n          }).catch(function (err) {\n            return connectCbError(err);\n          });\n        } else {\n          newSdk.connect(userId).then(function (res) {\n            return connectCbSucess(res);\n          }).catch(function (err) {\n            return connectCbError(err);\n          });\n        }\n      } else {\n        sdkDispatcher({\n          type: SDK_ERROR\n        });\n        logger.warning('Connection failed', 'UserId or appId missing');\n      }\n    }\n  });\n};\n\nvar isEmpty = function isEmpty(obj) {\n  if (obj === null || obj === undefined) {\n    return true;\n  }\n\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n\n  return JSON.stringify(obj) === JSON.stringify({});\n};\n\nvar useTheme = function useTheme(overrides) {\n  useLayoutEffect(function () {\n    if (!isEmpty(overrides)) {\n      cssVars({\n        variables: __assign({\n          '--sendbird-dark-primary-500': '#4d2aa6',\n          '--sendbird-dark-primary-400': '#6440C4',\n          '--sendbird-dark-primary-300': '#7B53EF',\n          '--sendbird-dark-primary-200': '#9E8CF5',\n          '--sendbird-dark-primary-100': '#E2DFFF',\n          '--sendbird-dark-secondary-500': '#007A7A',\n          '--sendbird-dark-secondary-400': '#189A8D',\n          '--sendbird-dark-secondary-300': '#2EBA9F',\n          '--sendbird-dark-secondary-200': '#6FD6BE',\n          '--sendbird-dark-secondary-100': '#AEF2DC',\n          '--sendbird-dark-information-100': '#b2d9ff',\n          '--sendbird-dark-error-500': '#A30E2D',\n          '--sendbird-dark-error-400': '#C11F41',\n          '--sendbird-dark-error-300': '#E53157',\n          '--sendbird-dark-error-200': '#FF6183',\n          '--sendbird-dark-error-100': '#FFABBD',\n          '--sendbird-dark-background-700': '#000000',\n          '--sendbird-dark-background-600': '#161616',\n          '--sendbird-dark-background-500': '#2C2C2C',\n          '--sendbird-dark-background-400': '#393939',\n          '--sendbird-dark-background-300': '#A8A8A8',\n          '--sendbird-dark-background-200': '#D9D9D9',\n          '--sendbird-dark-background-100': '#F0F0F0',\n          '--sendbird-dark-background-50': '#FFFFFF',\n          '--sendbird-dark-overlay': 'rgba(0, 0, 0, 0.32)',\n          '--sendbird-dark-onlight-01': 'rgba(0, 0, 0, 0.88)',\n          '--sendbird-dark-onlight-02': 'rgba(0, 0, 0, 0.50)',\n          '--sendbird-dark-onlight-03': 'rgba(0, 0, 0, 0.38)',\n          '--sendbird-dark-onlight-04': 'rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-ondark-01': 'rgba(255, 255, 255, 0.88)',\n          '--sendbird-dark-ondark-02': 'rgba(255, 255, 255, 0.50)',\n          '--sendbird-dark-ondark-03': 'rgba(255, 255, 255, 0.38)',\n          '--sendbird-dark-ondark-04': 'rgba(255, 255, 255, 0.12)',\n          '--sendbird-dark-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n          '--sendbird-dark-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-primary-500': '#4d2aa6',\n          '--sendbird-light-primary-400': '#6440C4',\n          '--sendbird-light-primary-300': '#7B53EF',\n          '--sendbird-light-primary-200': '#9E8CF5',\n          '--sendbird-light-primary-100': '#E2DFFF',\n          '--sendbird-light-secondary-500': '#007A7A',\n          '--sendbird-light-secondary-400': '#189A8D',\n          '--sendbird-light-secondary-300': '#2EBA9F',\n          '--sendbird-light-secondary-200': '#6FD6BE',\n          '--sendbird-light-secondary-100': '#AEF2DC',\n          '--sendbird-light-information-100': '#b2d9ff',\n          '--sendbird-light-error-500': '#A30E2D',\n          '--sendbird-light-error-400': '#C11F41',\n          '--sendbird-light-error-300': '#E53157',\n          '--sendbird-light-error-200': '#FF6183',\n          '--sendbird-light-error-100': '#FFABBD',\n          '--sendbird-light-background-700': '#000000',\n          '--sendbird-light-background-600': '#161616',\n          '--sendbird-light-background-500': '#2C2C2C',\n          '--sendbird-light-background-400': '#393939',\n          '--sendbird-light-background-300': '#A8A8A8',\n          '--sendbird-light-background-200': '#D9D9D9',\n          '--sendbird-light-background-100': '#F0F0F0',\n          '--sendbird-light-background-50': ' #FFFFFF',\n          '--sendbird-light-overlay': 'rgba(0, 0, 0, 0.32)',\n          '--sendbird-light-onlight-01': 'rgba(0, 0, 0, 0.88)',\n          '--sendbird-light-onlight-02': 'rgba(0, 0, 0, 0.50)',\n          '--sendbird-light-onlight-03': 'rgba(0, 0, 0, 0.38)',\n          '--sendbird-light-onlight-04': 'rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-ondark-01': 'rgba(255, 255, 255, 0.88)',\n          '--sendbird-light-ondark-02': 'rgba(255, 255, 255, 0.50)',\n          '--sendbird-light-ondark-03': 'rgba(255, 255, 255, 0.38)',\n          '--sendbird-light-ondark-04': 'rgba(255, 255, 255, 0.12)',\n          '--sendbird-light-shadow-01': '0 1px 5px 0 rgba(33, 34, 66, 0.04), 0 0 3px 0 rgba(0, 0, 0, 0.08), 0 2px 1px 0 rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-02': '0 3px 5px -3px rgba(33, 34, 66, 0.04), 0 3px 14px 2px rgba(0, 0, 0, 0.08), 0 8px 10px 1px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-03': '0 6px 10px -5px rgba(0, 0, 0, 0.04), 0 6px 30px 5px rgba(0, 0, 0, 0.08), 0 16px 24px 2px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-04': '0 9px 15px -7px rgba(0, 0, 0, 0.04), 0 9px 46px 8px rgba(0, 0, 0, 0.08), 0 24px 38px 3px rgba(0, 0, 0, 0.12)',\n          '--sendbird-light-shadow-message-input': '0 1px 5px 0 rgba(33, 34, 66, 0.12), 0 0 1px 0 rgba(33, 34, 66, 0.16), 0 2px 1px 0 rgba(33, 34, 66, 0.08), 0 1px 5px 0 rgba(0, 0, 0, 0.12)'\n        }, overrides)\n      });\n    }\n  }, [overrides]);\n};\n\nvar sdkInitialState = {\n  initialized: false,\n  loading: false,\n  sdk: {},\n  error: false\n};\n\nfunction reducer$1(state, action) {\n  switch (action.type) {\n    case SET_SDK_LOADING:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        initialized: false,\n        loading: action.payload\n      });\n\n    case SDK_ERROR:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        initialized: false,\n        loading: false,\n        error: true\n      });\n\n    case INIT_SDK:\n      return {\n        sdk: action.payload,\n        initialized: true,\n        loading: false,\n        error: false\n      };\n\n    case RESET_SDK:\n      return sdkInitialState;\n\n    default:\n      return state;\n  }\n}\n\nvar userInitialState = {\n  initialized: false,\n  loading: false,\n  user: {}\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case INIT_USER:\n      return {\n        initialized: true,\n        loading: false,\n        user: action.payload\n      };\n\n    case RESET_USER:\n      return userInitialState;\n\n    case UPDATE_USER_INFO:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        user: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction useConnectionStatus(sdk, logger) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOnline = _useState2[0],\n      setIsOnline = _useState2[1];\n\n  useEffect(function () {\n    var uniqueHandlerId = uuidv4();\n    logger.warning('sdk changed', uniqueHandlerId);\n    var handler;\n\n    if (sdk && sdk.ConnectionHandler) {\n      handler = new sdk.ConnectionHandler();\n\n      handler.onReconnectStarted = function () {\n        setIsOnline(false);\n        logger.warning('onReconnectStarted', {\n          isOnline: isOnline\n        });\n      };\n\n      handler.onReconnectSucceeded = function () {\n        setIsOnline(true);\n        logger.warning('onReconnectSucceeded', {\n          isOnline: isOnline\n        });\n      };\n\n      handler.onReconnectFailed = function () {\n        sdk.reconnect();\n        logger.warning('onReconnectFailed');\n      };\n\n      logger.info('Added ConnectionHandler', uniqueHandlerId);\n      sdk.addConnectionHandler(uniqueHandlerId, handler);\n    }\n\n    return function () {\n      try {\n        sdk.removeConnectionHandler(uniqueHandlerId);\n        logger.info('Removed ConnectionHandler', uniqueHandlerId);\n      } catch (_unused) {//\n      }\n    };\n  }, [sdk]);\n  useEffect(function () {\n    var tryReconnect = function tryReconnect() {\n      try {\n        logger.warning('Try reconnecting SDK');\n\n        if (sdk.getConnectionState() !== 'OPEN') {\n          // connection is not broken yet\n          sdk.reconnect();\n        }\n      } catch (_unused2) {//\n      }\n    }; // addEventListener version\n\n\n    window.addEventListener('online', tryReconnect);\n    return function () {\n      window.removeEventListener('online', tryReconnect);\n    };\n  }, [sdk]); // add offline-class to body\n\n  useEffect(function () {\n    var body = document.querySelector('body');\n\n    if (!isOnline) {\n      try {\n        body.classList.add('sendbird__offline');\n        logger.info('Added class sendbird__offline to body');\n      } catch (e) {//\n      }\n    } else {\n      try {\n        body.classList.remove('sendbird__offline');\n        logger.info('Removed class sendbird__offline from body');\n      } catch (e) {//\n      }\n    }\n  }, [isOnline]);\n  return isOnline;\n} // Logger, pretty much explains it\n// in SendbirdProvider\n// const [logger, setLogger] = useState(LoggerFactory(logLevel));\n\n\nvar LOG_LEVELS = {\n  DEBUG: 'debug',\n  WARNING: 'warning',\n  ERROR: 'error',\n  INFO: 'info',\n  ALL: 'all'\n};\n\nvar colorLog = function colorLog(level) {\n  switch (level) {\n    case LOG_LEVELS.WARNING:\n      return 'color: Orange';\n\n    case LOG_LEVELS.ERROR:\n      return 'color: Red';\n\n    default:\n      return 'color: Gray';\n  }\n};\n\nvar printLog = function printLog(_ref) {\n  var level = _ref.level,\n      title = _ref.title,\n      _ref$description = _ref.description,\n      description = _ref$description === void 0 ? '' : _ref$description; // eslint-disable-next-line no-console\n\n  console.log(\"%c SendbirdUIKit | \".concat(level, \" | \").concat(new Date().toISOString(), \" | \").concat(title, \" \").concat(description && '|'), colorLog(level), description);\n};\n\nvar getDefaultLogger = function getDefaultLogger() {\n  return {\n    info: function info() {},\n    error: function error() {},\n    warning: function warning() {}\n  };\n};\n\nvar LoggerFactory = function LoggerFactory(lvl, customInterface) {\n  var logInterface = customInterface || printLog;\n  var lvlArray = Array.isArray(lvl) ? lvl : [lvl];\n\n  var applyLog = function applyLog(lgLvl) {\n    return function (title, description) {\n      return logInterface({\n        level: lgLvl,\n        title: title,\n        description: description\n      });\n    };\n  };\n\n  var logger = lvlArray.reduce(function (accumulator, currentLvl) {\n    if (currentLvl === LOG_LEVELS.DEBUG || currentLvl === LOG_LEVELS.ALL) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        info: applyLog(LOG_LEVELS.INFO),\n        error: applyLog(LOG_LEVELS.ERROR),\n        warning: applyLog(LOG_LEVELS.WARNING)\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.INFO) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        info: applyLog(LOG_LEVELS.INFO)\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.ERROR) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        error: applyLog(LOG_LEVELS.ERROR)\n      });\n    }\n\n    if (currentLvl === LOG_LEVELS.WARNING) {\n      return _objectSpread2(_objectSpread2({}, accumulator), {}, {\n        warning: applyLog(LOG_LEVELS.WARNING)\n      });\n    }\n\n    return _objectSpread2({}, accumulator);\n  }, getDefaultLogger());\n  return logger;\n}; // https://davidwalsh.name/pubsub-javascript\n// we use pubsub to sync events between multiple components(example - ChannelList, Channel)\n// for example, if customer sends a message from their custom component\n// without pubsub,we would not be able to listen to it\n// in our ChannelList or Conversation\n\n\nvar pubSubFactory = function pubSubFactory() {\n  var topics = {};\n  var hOP = topics.hasOwnProperty;\n  return {\n    __getTopics: function __getTopics() {\n      return topics;\n    },\n    subscribe: function subscribe(topic, listener) {\n      // Create the topic's object if not yet created\n      if (!hOP.call(topics, topic)) {\n        topics[topic] = [];\n      } // Add the listener to queue\n\n\n      var index = topics[topic].push(listener) - 1; // Provide handle back for removal of topic\n\n      return {\n        remove: function remove() {\n          delete topics[topic][index];\n        }\n      };\n    },\n    publish: function publish(topic, info) {\n      // If the topic doesn't exist, or there's no listeners in queue, just leave\n      if (!hOP.call(topics, topic)) {\n        return;\n      } // Cycle through topics queue, fire!\n\n\n      topics[topic].forEach(function (item) {\n        item(info !== undefined ? info : {});\n      });\n    }\n  };\n};\n\nfunction useAppendDomNode() {\n  var ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var rootSelector = arguments.length > 1 ? arguments[1] : undefined;\n  useEffect(function () {\n    var root = document.querySelector(rootSelector);\n    ids.forEach(function (id) {\n      var elem = document.createElement('div');\n      elem.setAttribute('id', id);\n      root.appendChild(elem);\n    });\n    return function () {\n      ids.forEach(function (id) {\n        var target = document.getElementById(id);\n\n        if (target) {\n          root.removeChild(target);\n        }\n      });\n    };\n  }, []);\n}\n\nfunction Sendbird(props) {\n  var userId = props.userId,\n      appId = props.appId,\n      accessToken = props.accessToken,\n      children = props.children,\n      disableUserProfile = props.disableUserProfile,\n      renderUserProfile = props.renderUserProfile,\n      allowProfileEdit = props.allowProfileEdit,\n      theme = props.theme,\n      nickname = props.nickname,\n      profileUrl = props.profileUrl,\n      userListQuery = props.userListQuery,\n      _props$config = props.config,\n      config = _props$config === void 0 ? {} : _props$config,\n      colorSet = props.colorSet,\n      stringSet = props.stringSet,\n      imageCompression = props.imageCompression,\n      useReaction = props.useReaction;\n  var _config$logLevel = config.logLevel,\n      logLevel = _config$logLevel === void 0 ? '' : _config$logLevel;\n\n  var _useState = useState(LoggerFactory(logLevel)),\n      _useState2 = _slicedToArray(_useState, 2),\n      logger = _useState2[0],\n      setLogger = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pubSub = _useState4[0],\n      setPubSub = _useState4[1];\n\n  var _useReducer = useReducer(reducer$1, sdkInitialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      sdkStore = _useReducer2[0],\n      sdkDispatcher = _useReducer2[1];\n\n  var _useReducer3 = useReducer(reducer, userInitialState),\n      _useReducer4 = _slicedToArray(_useReducer3, 2),\n      userStore = _useReducer4[0],\n      userDispatcher = _useReducer4[1];\n\n  useTheme(colorSet);\n  useEffect(function () {\n    setPubSub(pubSubFactory());\n  }, []);\n  useEffect(function () {\n    logger.info('App Init'); // dispatch action\n\n    handleConnection({\n      userId: userId,\n      appId: appId,\n      accessToken: accessToken,\n      sdkStore: sdkStore,\n      nickname: nickname,\n      profileUrl: profileUrl,\n      sdk: sdkStore.sdk,\n      logger: logger\n    }, {\n      sdkDispatcher: sdkDispatcher,\n      userDispatcher: userDispatcher\n    });\n  }, [userId, appId, accessToken]); // to create a pubsub to communicate between parent and child\n\n  useEffect(function () {\n    setLogger(LoggerFactory(logLevel));\n  }, [logLevel]);\n  useAppendDomNode(['sendbird-modal-root', 'sendbird-dropdown-portal', 'sendbird-emoji-list-portal'], 'body'); // should move to reducer\n\n  var _useState5 = useState(theme),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currenttheme = _useState6[0],\n      setCurrenttheme = _useState6[1];\n\n  useEffect(function () {\n    setCurrenttheme(theme);\n  }, [theme]); // add-remove theme from body\n\n  useEffect(function () {\n    logger.info('Setup theme', \"Theme: \".concat(currenttheme));\n\n    try {\n      var body = document.querySelector('body');\n      body.classList.remove('sendbird-theme--light');\n      body.classList.remove('sendbird-theme--dark');\n      body.classList.add(\"sendbird-theme--\".concat(currenttheme || 'light'));\n      logger.info('Finish setup theme'); // eslint-disable-next-line no-empty\n    } catch (e) {\n      logger.warning('Setup theme failed', \"\".concat(e));\n    }\n\n    return function () {\n      try {\n        var _body = document.querySelector('body');\n\n        _body.classList.remove('sendbird-theme--light');\n\n        _body.classList.remove('sendbird-theme--dark'); // eslint-disable-next-line no-empty\n\n      } catch (_unused) {}\n    };\n  }, [currenttheme]);\n  var isOnline = useConnectionStatus(sdkStore.sdk, logger);\n  var localeStringSet = React__default.useMemo(function () {\n    if (!stringSet) {\n      return getStringSet('en');\n    }\n\n    return _objectSpread2(_objectSpread2({}, getStringSet('en')), stringSet);\n  }, [stringSet]);\n  return /*#__PURE__*/React__default.createElement(SendbirdSdkContext.Provider, {\n    value: {\n      stores: {\n        sdkStore: sdkStore,\n        userStore: userStore\n      },\n      dispatchers: {\n        sdkDispatcher: sdkDispatcher,\n        userDispatcher: userDispatcher,\n        reconnect: function reconnect() {\n          handleConnection({\n            userId: userId,\n            appId: appId,\n            accessToken: accessToken,\n            sdkStore: sdkStore,\n            nickname: nickname,\n            profileUrl: profileUrl,\n            logger: logger,\n            sdk: sdkStore.sdk\n          }, {\n            sdkDispatcher: sdkDispatcher,\n            userDispatcher: userDispatcher\n          });\n        }\n      },\n      config: {\n        disableUserProfile: disableUserProfile,\n        renderUserProfile: renderUserProfile,\n        allowProfileEdit: allowProfileEdit,\n        isOnline: isOnline,\n        userId: userId,\n        appId: appId,\n        accessToken: accessToken,\n        theme: currenttheme,\n        setCurrenttheme: setCurrenttheme,\n        userListQuery: userListQuery,\n        logger: logger,\n        pubSub: pubSub,\n        imageCompression: imageCompression,\n        useReaction: useReaction\n      }\n    }\n  }, /*#__PURE__*/React__default.createElement(LocalizationProvider, {\n    stringSet: localeStringSet\n  }, children));\n}\n\nSendbird.propTypes = {\n  userId: PropTypes.string.isRequired,\n  appId: PropTypes.string.isRequired,\n  accessToken: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element), PropTypes.any]).isRequired,\n  theme: PropTypes.string,\n  nickname: PropTypes.string,\n  profileUrl: PropTypes.string,\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  allowProfileEdit: PropTypes.bool,\n  userListQuery: PropTypes.func,\n  config: PropTypes.shape({\n    // None Error Warning Info 'All/Debug'\n    logLevel: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func\n    })\n  }),\n  stringSet: PropTypes.objectOf(PropTypes.string),\n  colorSet: PropTypes.objectOf(PropTypes.string),\n  useReaction: PropTypes.bool,\n  imageCompression: PropTypes.shape({\n    compressionRate: PropTypes.number,\n    resizingWidth: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    resizingHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  })\n};\nSendbird.defaultProps = {\n  accessToken: '',\n  theme: 'light',\n  nickname: '',\n  profileUrl: '',\n  disableUserProfile: false,\n  renderUserProfile: null,\n  allowProfileEdit: false,\n  userListQuery: null,\n  config: {},\n  stringSet: null,\n  colorSet: null,\n  imageCompression: {},\n  useReaction: true\n};\nexport { Sendbird as default };","map":null,"metadata":{},"sourceType":"module"}