{"ast":null,"code":"import { e as _toConsumableArray, c as LocalizationContext, b as _slicedToArray } from './LocalizationContext-dfe8b78b.js';\nimport React__default, { useContext, useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { a as LabelTypography, b as LabelColors, k as changeColorToClassName, L as Label, I as Icon, c as IconTypes, d as IconColors, A as Avatar } from './index-fe1a6d27.js';\nimport { a6 as Colors, a7 as changeColorToClassName$1, z as getClassName, I as IconButton, B as Button, d as ButtonTypes, e as ButtonSizes, a8 as MODAL_ROOT, Z as isSupportedFileView, W as isVideo, a9 as isImage } from './index-cb0d7936.js';\nimport { createPortal } from 'react-dom';\n\nvar isEmpty = function isEmpty(val) {\n  return val === null || val === undefined;\n}; // Some Ids return string and number inconsistently\n// only use to comapre IDs\n\n\nfunction compareIds(a, b) {\n  if (isEmpty(a) || isEmpty(b)) {\n    return false;\n  }\n\n  var aString = a.toString();\n  var bString = b.toString();\n  return aString === bString;\n}\n\nvar http = /https?:\\/\\//;\n\nfunction LinkLabel(_ref) {\n  var className = _ref.className,\n      src = _ref.src,\n      type = _ref.type,\n      color = _ref.color,\n      children = _ref.children;\n  var url = http.test(src) ? src : \"http://\".concat(src);\n  return /*#__PURE__*/React__default.createElement(\"a\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-link-label', color ? changeColorToClassName(color) : '']).join(' '),\n    href: url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-link-label__label\",\n    type: type,\n    color: color\n  }, children));\n}\n\nLinkLabel.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  src: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(Object.keys(LabelTypography)).isRequired,\n  color: PropTypes.oneOf(Object.keys(LabelColors)).isRequired,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.element)]).isRequired\n};\nLinkLabel.defaultProps = {\n  className: ''\n};\n\nfunction DateSeparator(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      separatorColor = _ref.separatorColor;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: [].concat(_toConsumableArray(Array.isArray(className) ? className : [className]), ['sendbird-separator']).join(' ')\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-separator__left', \"\".concat(changeColorToClassName$1(separatorColor), \"--background-color\")].join(' ')\n  }), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-separator__text\"\n  }, children), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: ['sendbird-separator__right', \"\".concat(changeColorToClassName$1(separatorColor), \"--background-color\")].join(' ')\n  }));\n}\n\nDateSeparator.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string), PropTypes.element]),\n  separatorColor: PropTypes.string\n};\nDateSeparator.defaultProps = {\n  className: '',\n  children: /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.CAPTION_2,\n    color: LabelColors.ONBACKGROUND_2\n  }, \"Date Separator\"),\n  separatorColor: Colors.ONBACKGROUND_4\n};\nvar LINE_HEIGHT = 76;\n\nvar noop = function noop() {};\n\nvar KeyCode = {\n  SHIFT: 16,\n  ENTER: 13\n};\n\nvar handleUploadFile = function handleUploadFile(callback) {\n  return function (event) {\n    if (event.target.files && event.target.files[0]) {\n      callback(event.target.files[0]);\n    } // eslint-disable-next-line no-param-reassign\n\n\n    event.target.value = '';\n  };\n};\n\nvar MessageInput = /*#__PURE__*/React__default.forwardRef(function (props, ref) {\n  var className = props.className,\n      isEdit = props.isEdit,\n      disabled = props.disabled,\n      value = props.value,\n      name = props.name,\n      placeholder = props.placeholder,\n      maxLength = props.maxLength,\n      onFileUpload = props.onFileUpload,\n      onSendMessage = props.onSendMessage,\n      onCancelEdit = props.onCancelEdit,\n      onStartTyping = props.onStartTyping,\n      channelUrl = props.channelUrl;\n\n  var _useContext = useContext(LocalizationContext),\n      stringSet = _useContext.stringSet;\n\n  var fileInputRef = useRef(null);\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShiftPressed = _useState4[0],\n      setIsShiftPressed = _useState4[1];\n\n  var setHeight = function setHeight() {\n    try {\n      var elem = ref.current;\n      var MAX_HEIGHT = window.document.body.offsetHeight * 0.6;\n\n      if (elem && elem.scrollHeight >= LINE_HEIGHT) {\n        if (MAX_HEIGHT < elem.scrollHeight) {\n          elem.style.height = 'auto';\n          elem.style.height = \"\".concat(MAX_HEIGHT, \"px\");\n        } else {\n          elem.style.height = 'auto';\n          elem.style.height = \"\".concat(elem.scrollHeight, \"px\");\n        }\n      } else {\n        elem.style.height = '';\n      }\n    } catch (error) {// error\n    }\n  }; // after setHeight called twice, the textarea goes to the initialized\n\n\n  useEffect(function () {\n    setHeight();\n    return setHeight;\n  }, [inputValue]); // clear input value when channel changes\n\n  useEffect(function () {\n    setInputValue('');\n  }, [channelUrl]);\n\n  var sendMessage = function sendMessage() {\n    if (inputValue && inputValue.trim().length > 0) {\n      var trimmedInputValue = inputValue.trim();\n\n      if (isEdit) {\n        // useUpdateMessageCallback\n        onSendMessage(name, trimmedInputValue, function () {\n          onCancelEdit();\n        });\n      } else {\n        // useSendMessageCallback\n        onSendMessage();\n        setInputValue('');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React__default.createElement(\"form\", {\n    className: getClassName([className, isEdit ? 'sendbird-message-input__edit' : '', disabled ? 'sendbird-message-input-form__disabled' : ''])\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: getClassName(['sendbird-message-input', disabled ? 'sendbird-message-input__disabled' : ''])\n  }, /*#__PURE__*/React__default.createElement(\"textarea\", {\n    className: \"sendbird-message-input--textarea\",\n    disabled: disabled,\n    ref: ref,\n    name: name,\n    value: inputValue,\n    maxLength: maxLength,\n    onChange: function onChange(e) {\n      setInputValue(e.target.value);\n      onStartTyping();\n    },\n    onKeyDown: function onKeyDown(e) {\n      if (e.keyCode === KeyCode.SHIFT) {\n        setIsShiftPressed(true);\n      }\n\n      if (!isShiftPressed && e.keyCode === KeyCode.ENTER) {\n        e.preventDefault();\n        sendMessage();\n      }\n    },\n    onKeyUp: function onKeyUp(e) {\n      if (e.keyCode === KeyCode.SHIFT) {\n        setIsShiftPressed(false);\n      }\n    }\n  }), !inputValue && /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-message-input--placeholder\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_3\n  }, placeholder || stringSet.MESSAGE_INPUT__PLACE_HOLDER), !isEdit && inputValue && inputValue.trim().length > 0 && /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-message-input--send\",\n    height: \"32px\",\n    width: \"32px\",\n    onClick: sendMessage\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.SEND,\n    fillColor: IconColors.PRIMARY,\n    width: \"20px\",\n    height: \"20px\"\n  })), !isEdit && (!inputValue || !(inputValue.trim().length > 0)) && /*#__PURE__*/React__default.createElement(IconButton, {\n    className: \"sendbird-message-input--attach\",\n    height: \"32px\",\n    width: \"32px\",\n    onClick: function onClick() {\n      // todo: clear previous input\n      fileInputRef.current.click();\n    }\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.ATTACH,\n    fillColor: IconColors.CONTENT_INVERSE,\n    width: \"20px\",\n    height: \"20px\"\n  }), /*#__PURE__*/React__default.createElement(\"input\", {\n    className: \"sendbird-message-input--attach-input\",\n    type: \"file\",\n    ref: fileInputRef,\n    onChange: handleUploadFile(onFileUpload)\n  }))), isEdit && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-message-input--edit-action\"\n  }, /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-message-input--edit-action__cancel\",\n    type: ButtonTypes.SECONDARY,\n    size: ButtonSizes.SMALL,\n    onClick: onCancelEdit\n  }, stringSet.BUTTON__CANCEL), /*#__PURE__*/React__default.createElement(Button, {\n    className: \"sendbird-message-input--edit-action__save\",\n    type: ButtonTypes.PRIMARY,\n    size: ButtonSizes.SMALL,\n    onClick: function onClick() {\n      if (inputValue) {\n        var trimmedInputValue = inputValue.trim();\n        onSendMessage(name, trimmedInputValue, function () {\n          onCancelEdit();\n        });\n      }\n    }\n  }, stringSet.BUTTON__SAVE)));\n});\nMessageInput.propTypes = {\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  isEdit: PropTypes.bool,\n  name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  value: PropTypes.string,\n  disabled: PropTypes.bool,\n  maxLength: PropTypes.number,\n  onFileUpload: PropTypes.func,\n  onSendMessage: PropTypes.func,\n  onStartTyping: PropTypes.func,\n  onCancelEdit: PropTypes.func,\n  channelUrl: PropTypes.string\n};\nMessageInput.defaultProps = {\n  className: '',\n  value: '',\n  channelUrl: '',\n  onSendMessage: noop,\n  name: 'sendbird-message-input',\n  isEdit: false,\n  disabled: false,\n  placeholder: '',\n  maxLength: 5000,\n  onFileUpload: noop,\n  onCancelEdit: noop,\n  onStartTyping: noop\n};\n\nvar FileViewerComponent = function FileViewerComponent(_ref) {\n  var profileUrl = _ref.profileUrl,\n      nickname = _ref.nickname,\n      name = _ref.name,\n      type = _ref.type,\n      url = _ref.url,\n      isByMe = _ref.isByMe,\n      onClose = _ref.onClose,\n      onDelete = _ref.onDelete,\n      disableDelete = _ref.disableDelete;\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__left\"\n  }, /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__left__avatar\"\n  }, /*#__PURE__*/React__default.createElement(Avatar, {\n    height: \"32px\",\n    width: \"32px\",\n    src: profileUrl\n  })), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-fileviewer__header__left__filename\",\n    type: LabelTypography.H_2,\n    color: LabelColors.ONBACKGROUND_1\n  }, name), /*#__PURE__*/React__default.createElement(Label, {\n    className: \"sendbird-fileviewer__header__left__sender-name\",\n    type: LabelTypography.BODY_1,\n    color: LabelColors.ONBACKGROUND_2\n  }, nickname)), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right\"\n  }, isSupportedFileView(type) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right__actions\"\n  }, /*#__PURE__*/React__default.createElement(\"a\", {\n    className: \"sendbird-fileviewer__header__right__actions__download\",\n    rel: \"noopener noreferrer\",\n    href: url,\n    target: \"_blank\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.DOWNLOAD,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    height: \"24px\",\n    width: \"24px\"\n  })), onDelete && isByMe && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right__actions__delete\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    className: disableDelete ? 'disabled' : '',\n    type: IconTypes.DELETE,\n    fillColor: disableDelete ? IconColors.GRAY : IconColors.ON_BACKGROUND_1,\n    height: \"24px\",\n    width: \"24px\",\n    onClick: function onClick() {\n      if (!disableDelete) {\n        onDelete();\n      }\n    }\n  }))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__header__right__actions__close\"\n  }, /*#__PURE__*/React__default.createElement(Icon, {\n    type: IconTypes.CLOSE,\n    fillColor: IconColors.ON_BACKGROUND_1,\n    height: \"24px\",\n    width: \"24px\",\n    onClick: onClose\n  })))), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__content\"\n  }, isVideo(type) &&\n  /*#__PURE__*/\n  // eslint-disable-next-line jsx-a11y/media-has-caption\n  React__default.createElement(\"video\", {\n    controls: true,\n    className: \"sendbird-fileviewer__content__video\"\n  }, /*#__PURE__*/React__default.createElement(\"source\", {\n    src: url,\n    type: type\n  })), isImage(type) && /*#__PURE__*/React__default.createElement(\"img\", {\n    src: url,\n    alt: name,\n    className: \"sendbird-fileviewer__content__img\"\n  }), !isSupportedFileView(type) && /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"sendbird-fileviewer__content__unsupported\"\n  }, /*#__PURE__*/React__default.createElement(Label, {\n    type: LabelTypography.H_1,\n    color: LabelColors.ONBACKGROUND_1\n  }, \"Unsupoprted message\"))));\n};\n\nFileViewerComponent.propTypes = {\n  profileUrl: PropTypes.string.isRequired,\n  nickname: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  isByMe: PropTypes.bool,\n  disableDelete: PropTypes.bool\n};\nFileViewerComponent.defaultProps = {\n  isByMe: true,\n  disableDelete: false\n};\n\nfunction FileViewer(props) {\n  var message = props.message,\n      isByMe = props.isByMe,\n      onClose = props.onClose,\n      onDelete = props.onDelete;\n  var sender = message.sender,\n      type = message.type,\n      url = message.url,\n      _message$name = message.name,\n      name = _message$name === void 0 ? '' : _message$name,\n      _message$threadInfo = message.threadInfo,\n      threadInfo = _message$threadInfo === void 0 ? {} : _message$threadInfo;\n  var disableDelete = (threadInfo === null || threadInfo === void 0 ? void 0 : threadInfo.replyCount) > 0;\n  var profileUrl = sender.profileUrl,\n      _sender$nickname = sender.nickname,\n      nickname = _sender$nickname === void 0 ? '' : _sender$nickname;\n  return /*#__PURE__*/createPortal( /*#__PURE__*/React__default.createElement(FileViewerComponent, {\n    profileUrl: profileUrl,\n    nickname: nickname,\n    type: type,\n    url: url,\n    name: name,\n    onClose: onClose,\n    onDelete: onDelete,\n    isByMe: isByMe,\n    disableDelete: disableDelete\n  }), document.getElementById(MODAL_ROOT));\n}\n\nFileViewer.propTypes = {\n  message: PropTypes.shape({\n    sender: PropTypes.shape({\n      profileUrl: PropTypes.string,\n      nickname: PropTypes.string\n    }),\n    type: PropTypes.string,\n    url: PropTypes.string,\n    name: PropTypes.string\n  }).isRequired,\n  isByMe: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired\n};\nFileViewer.defaultProps = {\n  isByMe: true\n};\nexport { DateSeparator as D, FileViewer as F, LinkLabel as L, MessageInput as M, compareIds as c };","map":null,"metadata":{},"sourceType":"module"}